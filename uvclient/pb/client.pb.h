// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

#ifndef PROTOBUF_INCLUDED_client_2eproto
#define PROTOBUF_INCLUDED_client_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_client_2eproto 

namespace protobuf_client_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[31];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_client_2eproto
namespace im_client {
class BatchRecvMsgStateResp;
class BatchRecvMsgStateRespDefaultTypeInternal;
extern BatchRecvMsgStateRespDefaultTypeInternal _BatchRecvMsgStateResp_default_instance_;
class BatchSendMsgStateReq;
class BatchSendMsgStateReqDefaultTypeInternal;
extern BatchSendMsgStateReqDefaultTypeInternal _BatchSendMsgStateReq_default_instance_;
class BatchSendMsgStateResp;
class BatchSendMsgStateRespDefaultTypeInternal;
extern BatchSendMsgStateRespDefaultTypeInternal _BatchSendMsgStateResp_default_instance_;
class ForceExitReq;
class ForceExitReqDefaultTypeInternal;
extern ForceExitReqDefaultTypeInternal _ForceExitReq_default_instance_;
class ForceExitResp;
class ForceExitRespDefaultTypeInternal;
extern ForceExitRespDefaultTypeInternal _ForceExitResp_default_instance_;
class Msg;
class MsgDefaultTypeInternal;
extern MsgDefaultTypeInternal _Msg_default_instance_;
class MsgStatus;
class MsgStatusDefaultTypeInternal;
extern MsgStatusDefaultTypeInternal _MsgStatus_default_instance_;
class PullGroupOnlineInfoReq;
class PullGroupOnlineInfoReqDefaultTypeInternal;
extern PullGroupOnlineInfoReqDefaultTypeInternal _PullGroupOnlineInfoReq_default_instance_;
class PullGroupOnlineInfoResp;
class PullGroupOnlineInfoRespDefaultTypeInternal;
extern PullGroupOnlineInfoRespDefaultTypeInternal _PullGroupOnlineInfoResp_default_instance_;
class PullUserOnlineInfoReq;
class PullUserOnlineInfoReqDefaultTypeInternal;
extern PullUserOnlineInfoReqDefaultTypeInternal _PullUserOnlineInfoReq_default_instance_;
class PullUserOnlineInfoResp;
class PullUserOnlineInfoRespDefaultTypeInternal;
extern PullUserOnlineInfoRespDefaultTypeInternal _PullUserOnlineInfoResp_default_instance_;
class PushFriendStatusReq;
class PushFriendStatusReqDefaultTypeInternal;
extern PushFriendStatusReqDefaultTypeInternal _PushFriendStatusReq_default_instance_;
class PushFriendStatusResp;
class PushFriendStatusRespDefaultTypeInternal;
extern PushFriendStatusRespDefaultTypeInternal _PushFriendStatusResp_default_instance_;
class PushNoticeReq;
class PushNoticeReqDefaultTypeInternal;
extern PushNoticeReqDefaultTypeInternal _PushNoticeReq_default_instance_;
class PushNoticeResp;
class PushNoticeRespDefaultTypeInternal;
extern PushNoticeRespDefaultTypeInternal _PushNoticeResp_default_instance_;
class PushSubscribeReq;
class PushSubscribeReqDefaultTypeInternal;
extern PushSubscribeReqDefaultTypeInternal _PushSubscribeReq_default_instance_;
class PushSubscribeResp;
class PushSubscribeRespDefaultTypeInternal;
extern PushSubscribeRespDefaultTypeInternal _PushSubscribeResp_default_instance_;
class RecvMsgResp;
class RecvMsgRespDefaultTypeInternal;
extern RecvMsgRespDefaultTypeInternal _RecvMsgResp_default_instance_;
class RecvMsgStateResp;
class RecvMsgStateRespDefaultTypeInternal;
extern RecvMsgStateRespDefaultTypeInternal _RecvMsgStateResp_default_instance_;
class SendMsgReq;
class SendMsgReqDefaultTypeInternal;
extern SendMsgReqDefaultTypeInternal _SendMsgReq_default_instance_;
class SendMsgResp;
class SendMsgRespDefaultTypeInternal;
extern SendMsgRespDefaultTypeInternal _SendMsgResp_default_instance_;
class SendMsgStateReq;
class SendMsgStateReqDefaultTypeInternal;
extern SendMsgStateReqDefaultTypeInternal _SendMsgStateReq_default_instance_;
class SendMsgStateResp;
class SendMsgStateRespDefaultTypeInternal;
extern SendMsgStateRespDefaultTypeInternal _SendMsgStateResp_default_instance_;
class SendSubscribeReq;
class SendSubscribeReqDefaultTypeInternal;
extern SendSubscribeReqDefaultTypeInternal _SendSubscribeReq_default_instance_;
class SendSubscribeResp;
class SendSubscribeRespDefaultTypeInternal;
extern SendSubscribeRespDefaultTypeInternal _SendSubscribeResp_default_instance_;
class recvInputStateReq;
class recvInputStateReqDefaultTypeInternal;
extern recvInputStateReqDefaultTypeInternal _recvInputStateReq_default_instance_;
class recvInputStateResp;
class recvInputStateRespDefaultTypeInternal;
extern recvInputStateRespDefaultTypeInternal _recvInputStateResp_default_instance_;
class reportNoReadMsgSumReq;
class reportNoReadMsgSumReqDefaultTypeInternal;
extern reportNoReadMsgSumReqDefaultTypeInternal _reportNoReadMsgSumReq_default_instance_;
class reportNoReadMsgSumResp;
class reportNoReadMsgSumRespDefaultTypeInternal;
extern reportNoReadMsgSumRespDefaultTypeInternal _reportNoReadMsgSumResp_default_instance_;
class sendInputStateReq;
class sendInputStateReqDefaultTypeInternal;
extern sendInputStateReqDefaultTypeInternal _sendInputStateReq_default_instance_;
class sendInputStateResp;
class sendInputStateRespDefaultTypeInternal;
extern sendInputStateRespDefaultTypeInternal _sendInputStateResp_default_instance_;
}  // namespace im_client
namespace google {
namespace protobuf {
template<> ::im_client::BatchRecvMsgStateResp* Arena::CreateMaybeMessage<::im_client::BatchRecvMsgStateResp>(Arena*);
template<> ::im_client::BatchSendMsgStateReq* Arena::CreateMaybeMessage<::im_client::BatchSendMsgStateReq>(Arena*);
template<> ::im_client::BatchSendMsgStateResp* Arena::CreateMaybeMessage<::im_client::BatchSendMsgStateResp>(Arena*);
template<> ::im_client::ForceExitReq* Arena::CreateMaybeMessage<::im_client::ForceExitReq>(Arena*);
template<> ::im_client::ForceExitResp* Arena::CreateMaybeMessage<::im_client::ForceExitResp>(Arena*);
template<> ::im_client::Msg* Arena::CreateMaybeMessage<::im_client::Msg>(Arena*);
template<> ::im_client::MsgStatus* Arena::CreateMaybeMessage<::im_client::MsgStatus>(Arena*);
template<> ::im_client::PullGroupOnlineInfoReq* Arena::CreateMaybeMessage<::im_client::PullGroupOnlineInfoReq>(Arena*);
template<> ::im_client::PullGroupOnlineInfoResp* Arena::CreateMaybeMessage<::im_client::PullGroupOnlineInfoResp>(Arena*);
template<> ::im_client::PullUserOnlineInfoReq* Arena::CreateMaybeMessage<::im_client::PullUserOnlineInfoReq>(Arena*);
template<> ::im_client::PullUserOnlineInfoResp* Arena::CreateMaybeMessage<::im_client::PullUserOnlineInfoResp>(Arena*);
template<> ::im_client::PushFriendStatusReq* Arena::CreateMaybeMessage<::im_client::PushFriendStatusReq>(Arena*);
template<> ::im_client::PushFriendStatusResp* Arena::CreateMaybeMessage<::im_client::PushFriendStatusResp>(Arena*);
template<> ::im_client::PushNoticeReq* Arena::CreateMaybeMessage<::im_client::PushNoticeReq>(Arena*);
template<> ::im_client::PushNoticeResp* Arena::CreateMaybeMessage<::im_client::PushNoticeResp>(Arena*);
template<> ::im_client::PushSubscribeReq* Arena::CreateMaybeMessage<::im_client::PushSubscribeReq>(Arena*);
template<> ::im_client::PushSubscribeResp* Arena::CreateMaybeMessage<::im_client::PushSubscribeResp>(Arena*);
template<> ::im_client::RecvMsgResp* Arena::CreateMaybeMessage<::im_client::RecvMsgResp>(Arena*);
template<> ::im_client::RecvMsgStateResp* Arena::CreateMaybeMessage<::im_client::RecvMsgStateResp>(Arena*);
template<> ::im_client::SendMsgReq* Arena::CreateMaybeMessage<::im_client::SendMsgReq>(Arena*);
template<> ::im_client::SendMsgResp* Arena::CreateMaybeMessage<::im_client::SendMsgResp>(Arena*);
template<> ::im_client::SendMsgStateReq* Arena::CreateMaybeMessage<::im_client::SendMsgStateReq>(Arena*);
template<> ::im_client::SendMsgStateResp* Arena::CreateMaybeMessage<::im_client::SendMsgStateResp>(Arena*);
template<> ::im_client::SendSubscribeReq* Arena::CreateMaybeMessage<::im_client::SendSubscribeReq>(Arena*);
template<> ::im_client::SendSubscribeResp* Arena::CreateMaybeMessage<::im_client::SendSubscribeResp>(Arena*);
template<> ::im_client::recvInputStateReq* Arena::CreateMaybeMessage<::im_client::recvInputStateReq>(Arena*);
template<> ::im_client::recvInputStateResp* Arena::CreateMaybeMessage<::im_client::recvInputStateResp>(Arena*);
template<> ::im_client::reportNoReadMsgSumReq* Arena::CreateMaybeMessage<::im_client::reportNoReadMsgSumReq>(Arena*);
template<> ::im_client::reportNoReadMsgSumResp* Arena::CreateMaybeMessage<::im_client::reportNoReadMsgSumResp>(Arena*);
template<> ::im_client::sendInputStateReq* Arena::CreateMaybeMessage<::im_client::sendInputStateReq>(Arena*);
template<> ::im_client::sendInputStateResp* Arena::CreateMaybeMessage<::im_client::sendInputStateResp>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace im_client {

// ===================================================================

class ForceExitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.ForceExitReq) */ {
 public:
  ForceExitReq();
  virtual ~ForceExitReq();

  ForceExitReq(const ForceExitReq& from);

  inline ForceExitReq& operator=(const ForceExitReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceExitReq(ForceExitReq&& from) noexcept
    : ForceExitReq() {
    *this = ::std::move(from);
  }

  inline ForceExitReq& operator=(ForceExitReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceExitReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForceExitReq* internal_default_instance() {
    return reinterpret_cast<const ForceExitReq*>(
               &_ForceExitReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ForceExitReq* other);
  friend void swap(ForceExitReq& a, ForceExitReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceExitReq* New() const final {
    return CreateMaybeMessage<ForceExitReq>(NULL);
  }

  ForceExitReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ForceExitReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ForceExitReq& from);
  void MergeFrom(const ForceExitReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForceExitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string devids = 4;
  int devids_size() const;
  void clear_devids();
  static const int kDevidsFieldNumber = 4;
  const ::std::string& devids(int index) const;
  ::std::string* mutable_devids(int index);
  void set_devids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_devids(int index, ::std::string&& value);
  #endif
  void set_devids(int index, const char* value);
  void set_devids(int index, const char* value, size_t size);
  ::std::string* add_devids();
  void add_devids(const ::std::string& value);
  #if LANG_CXX11
  void add_devids(::std::string&& value);
  #endif
  void add_devids(const char* value);
  void add_devids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& devids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_devids();

  // string tips = 3;
  void clear_tips();
  static const int kTipsFieldNumber = 3;
  const ::std::string& tips() const;
  void set_tips(const ::std::string& value);
  #if LANG_CXX11
  void set_tips(::std::string&& value);
  #endif
  void set_tips(const char* value);
  void set_tips(const char* value, size_t size);
  ::std::string* mutable_tips();
  ::std::string* release_tips();
  void set_allocated_tips(::std::string* tips);

  // int64 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int32 opType = 2;
  void clear_optype();
  static const int kOpTypeFieldNumber = 2;
  ::google::protobuf::int32 optype() const;
  void set_optype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.ForceExitReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> devids_;
  ::google::protobuf::internal::ArenaStringPtr tips_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 optype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForceExitResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.ForceExitResp) */ {
 public:
  ForceExitResp();
  virtual ~ForceExitResp();

  ForceExitResp(const ForceExitResp& from);

  inline ForceExitResp& operator=(const ForceExitResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceExitResp(ForceExitResp&& from) noexcept
    : ForceExitResp() {
    *this = ::std::move(from);
  }

  inline ForceExitResp& operator=(ForceExitResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceExitResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForceExitResp* internal_default_instance() {
    return reinterpret_cast<const ForceExitResp*>(
               &_ForceExitResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ForceExitResp* other);
  friend void swap(ForceExitResp& a, ForceExitResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceExitResp* New() const final {
    return CreateMaybeMessage<ForceExitResp>(NULL);
  }

  ForceExitResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ForceExitResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ForceExitResp& from);
  void MergeFrom(const ForceExitResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForceExitResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.ForceExitResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.Msg) */ {
 public:
  Msg();
  virtual ~Msg();

  Msg(const Msg& from);

  inline Msg& operator=(const Msg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Msg(Msg&& from) noexcept
    : Msg() {
    *this = ::std::move(from);
  }

  inline Msg& operator=(Msg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg* internal_default_instance() {
    return reinterpret_cast<const Msg*>(
               &_Msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Msg* other);
  friend void swap(Msg& a, Msg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Msg* New() const final {
    return CreateMaybeMessage<Msg>(NULL);
  }

  Msg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Msg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Msg& from);
  void MergeFrom(const Msg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // bytes crypto_body = 2;
  void clear_crypto_body();
  static const int kCryptoBodyFieldNumber = 2;
  const ::std::string& crypto_body() const;
  void set_crypto_body(const ::std::string& value);
  #if LANG_CXX11
  void set_crypto_body(::std::string&& value);
  #endif
  void set_crypto_body(const char* value);
  void set_crypto_body(const void* value, size_t size);
  ::std::string* mutable_crypto_body();
  ::std::string* release_crypto_body();
  void set_allocated_crypto_body(::std::string* crypto_body);

  // @@protoc_insertion_point(class_scope:im_client.Msg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr crypto_body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.SendMsgReq) */ {
 public:
  SendMsgReq();
  virtual ~SendMsgReq();

  SendMsgReq(const SendMsgReq& from);

  inline SendMsgReq& operator=(const SendMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendMsgReq(SendMsgReq&& from) noexcept
    : SendMsgReq() {
    *this = ::std::move(from);
  }

  inline SendMsgReq& operator=(SendMsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMsgReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMsgReq* internal_default_instance() {
    return reinterpret_cast<const SendMsgReq*>(
               &_SendMsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SendMsgReq* other);
  friend void swap(SendMsgReq& a, SendMsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendMsgReq* New() const final {
    return CreateMaybeMessage<SendMsgReq>(NULL);
  }

  SendMsgReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendMsgReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendMsgReq& from);
  void MergeFrom(const SendMsgReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 notifyUserId = 17;
  int notifyuserid_size() const;
  void clear_notifyuserid();
  static const int kNotifyUserIdFieldNumber = 17;
  ::google::protobuf::int64 notifyuserid(int index) const;
  void set_notifyuserid(int index, ::google::protobuf::int64 value);
  void add_notifyuserid(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      notifyuserid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_notifyuserid();

  // string fromNickName = 2;
  void clear_fromnickname();
  static const int kFromNickNameFieldNumber = 2;
  const ::std::string& fromnickname() const;
  void set_fromnickname(const ::std::string& value);
  #if LANG_CXX11
  void set_fromnickname(::std::string&& value);
  #endif
  void set_fromnickname(const char* value);
  void set_fromnickname(const char* value, size_t size);
  ::std::string* mutable_fromnickname();
  ::std::string* release_fromnickname();
  void set_allocated_fromnickname(::std::string* fromnickname);

  // string fromHeadImg = 3;
  void clear_fromheadimg();
  static const int kFromHeadImgFieldNumber = 3;
  const ::std::string& fromheadimg() const;
  void set_fromheadimg(const ::std::string& value);
  #if LANG_CXX11
  void set_fromheadimg(::std::string&& value);
  #endif
  void set_fromheadimg(const char* value);
  void set_fromheadimg(const char* value, size_t size);
  ::std::string* mutable_fromheadimg();
  ::std::string* release_fromheadimg();
  void set_allocated_fromheadimg(::std::string* fromheadimg);

  // string nodeId = 14;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 14;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // .im_client.Msg msg = 10;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 10;
  private:
  const ::im_client::Msg& _internal_msg() const;
  public:
  const ::im_client::Msg& msg() const;
  ::im_client::Msg* release_msg();
  ::im_client::Msg* mutable_msg();
  void set_allocated_msg(::im_client::Msg* msg);

  // int64 fromId = 1;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int64 fromid() const;
  void set_fromid(::google::protobuf::int64 value);

  // int64 dstId = 4;
  void clear_dstid();
  static const int kDstIdFieldNumber = 4;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int64 msgId = 6;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 6;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 dstType = 5;
  void clear_dsttype();
  static const int kDstTypeFieldNumber = 5;
  ::google::protobuf::int32 dsttype() const;
  void set_dsttype(::google::protobuf::int32 value);

  // int32 isTransmit = 8;
  void clear_istransmit();
  static const int kIsTransmitFieldNumber = 8;
  ::google::protobuf::int32 istransmit() const;
  void set_istransmit(::google::protobuf::int32 value);

  // int64 sendTime = 7;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 7;
  ::google::protobuf::int64 sendtime() const;
  void set_sendtime(::google::protobuf::int64 value);

  // int32 msgType = 9;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 9;
  ::google::protobuf::int32 msgtype() const;
  void set_msgtype(::google::protobuf::int32 value);

  // int32 createSession = 12;
  void clear_createsession();
  static const int kCreateSessionFieldNumber = 12;
  ::google::protobuf::int32 createsession() const;
  void set_createsession(::google::protobuf::int32 value);

  // int64 clientMsgId = 11;
  void clear_clientmsgid();
  static const int kClientMsgIdFieldNumber = 11;
  ::google::protobuf::int64 clientmsgid() const;
  void set_clientmsgid(::google::protobuf::int64 value);

  // int32 nodeStartTime = 13;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 13;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int32 msgSeq = 15;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 15;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // int64 notifyMsgId = 18;
  void clear_notifymsgid();
  static const int kNotifyMsgIdFieldNumber = 18;
  ::google::protobuf::int64 notifymsgid() const;
  void set_notifymsgid(::google::protobuf::int64 value);

  // int64 keyVersion = 19;
  void clear_keyversion();
  static const int kKeyVersionFieldNumber = 19;
  ::google::protobuf::int64 keyversion() const;
  void set_keyversion(::google::protobuf::int64 value);

  // int32 isTrySend = 16;
  void clear_istrysend();
  static const int kIsTrySendFieldNumber = 16;
  ::google::protobuf::int32 istrysend() const;
  void set_istrysend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.SendMsgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > notifyuserid_;
  mutable int _notifyuserid_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr fromnickname_;
  ::google::protobuf::internal::ArenaStringPtr fromheadimg_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::im_client::Msg* msg_;
  ::google::protobuf::int64 fromid_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 dsttype_;
  ::google::protobuf::int32 istransmit_;
  ::google::protobuf::int64 sendtime_;
  ::google::protobuf::int32 msgtype_;
  ::google::protobuf::int32 createsession_;
  ::google::protobuf::int64 clientmsgid_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int32 msgseq_;
  ::google::protobuf::int64 notifymsgid_;
  ::google::protobuf::int64 keyversion_;
  ::google::protobuf::int32 istrysend_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendMsgResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.SendMsgResp) */ {
 public:
  SendMsgResp();
  virtual ~SendMsgResp();

  SendMsgResp(const SendMsgResp& from);

  inline SendMsgResp& operator=(const SendMsgResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendMsgResp(SendMsgResp&& from) noexcept
    : SendMsgResp() {
    *this = ::std::move(from);
  }

  inline SendMsgResp& operator=(SendMsgResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMsgResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMsgResp* internal_default_instance() {
    return reinterpret_cast<const SendMsgResp*>(
               &_SendMsgResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SendMsgResp* other);
  friend void swap(SendMsgResp& a, SendMsgResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendMsgResp* New() const final {
    return CreateMaybeMessage<SendMsgResp>(NULL);
  }

  SendMsgResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendMsgResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendMsgResp& from);
  void MergeFrom(const SendMsgResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendMsgResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // string nodeId = 7;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 7;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // int64 msgId = 3;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 nodeStartTime = 6;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 6;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int64 serverTime = 4;
  void clear_servertime();
  static const int kServerTimeFieldNumber = 4;
  ::google::protobuf::int64 servertime() const;
  void set_servertime(::google::protobuf::int64 value);

  // int64 clientMsgId = 5;
  void clear_clientmsgid();
  static const int kClientMsgIdFieldNumber = 5;
  ::google::protobuf::int64 clientmsgid() const;
  void set_clientmsgid(::google::protobuf::int64 value);

  // int32 msgSeq = 8;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 8;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // int32 keyUpdated = 9;
  void clear_keyupdated();
  static const int kKeyUpdatedFieldNumber = 9;
  ::google::protobuf::int32 keyupdated() const;
  void set_keyupdated(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.SendMsgResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int64 servertime_;
  ::google::protobuf::int64 clientmsgid_;
  ::google::protobuf::int32 msgseq_;
  ::google::protobuf::int32 keyupdated_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecvMsgResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.RecvMsgResp) */ {
 public:
  RecvMsgResp();
  virtual ~RecvMsgResp();

  RecvMsgResp(const RecvMsgResp& from);

  inline RecvMsgResp& operator=(const RecvMsgResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecvMsgResp(RecvMsgResp&& from) noexcept
    : RecvMsgResp() {
    *this = ::std::move(from);
  }

  inline RecvMsgResp& operator=(RecvMsgResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvMsgResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecvMsgResp* internal_default_instance() {
    return reinterpret_cast<const RecvMsgResp*>(
               &_RecvMsgResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(RecvMsgResp* other);
  friend void swap(RecvMsgResp& a, RecvMsgResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecvMsgResp* New() const final {
    return CreateMaybeMessage<RecvMsgResp>(NULL);
  }

  RecvMsgResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RecvMsgResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RecvMsgResp& from);
  void MergeFrom(const RecvMsgResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecvMsgResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // string nodeId = 5;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 5;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 nodeStartTime = 4;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 4;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int64 msgId = 3;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 msgSeq = 6;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 6;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.RecvMsgResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 msgseq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushNoticeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PushNoticeReq) */ {
 public:
  PushNoticeReq();
  virtual ~PushNoticeReq();

  PushNoticeReq(const PushNoticeReq& from);

  inline PushNoticeReq& operator=(const PushNoticeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushNoticeReq(PushNoticeReq&& from) noexcept
    : PushNoticeReq() {
    *this = ::std::move(from);
  }

  inline PushNoticeReq& operator=(PushNoticeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushNoticeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushNoticeReq* internal_default_instance() {
    return reinterpret_cast<const PushNoticeReq*>(
               &_PushNoticeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(PushNoticeReq* other);
  friend void swap(PushNoticeReq& a, PushNoticeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushNoticeReq* New() const final {
    return CreateMaybeMessage<PushNoticeReq>(NULL);
  }

  PushNoticeReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushNoticeReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushNoticeReq& from);
  void MergeFrom(const PushNoticeReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushNoticeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fromNickName = 3;
  void clear_fromnickname();
  static const int kFromNickNameFieldNumber = 3;
  const ::std::string& fromnickname() const;
  void set_fromnickname(const ::std::string& value);
  #if LANG_CXX11
  void set_fromnickname(::std::string&& value);
  #endif
  void set_fromnickname(const char* value);
  void set_fromnickname(const char* value, size_t size);
  ::std::string* mutable_fromnickname();
  ::std::string* release_fromnickname();
  void set_allocated_fromnickname(::std::string* fromnickname);

  // string fromHeadImg = 4;
  void clear_fromheadimg();
  static const int kFromHeadImgFieldNumber = 4;
  const ::std::string& fromheadimg() const;
  void set_fromheadimg(const ::std::string& value);
  #if LANG_CXX11
  void set_fromheadimg(::std::string&& value);
  #endif
  void set_fromheadimg(const char* value);
  void set_fromheadimg(const char* value, size_t size);
  ::std::string* mutable_fromheadimg();
  ::std::string* release_fromheadimg();
  void set_allocated_fromheadimg(::std::string* fromheadimg);

  // string msg = 9;
  void clear_msg();
  static const int kMsgFieldNumber = 9;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string nodeId = 11;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 11;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // int64 fromId = 2;
  void clear_fromid();
  static const int kFromIdFieldNumber = 2;
  ::google::protobuf::int64 fromid() const;
  void set_fromid(::google::protobuf::int64 value);

  // int32 fromType = 1;
  void clear_fromtype();
  static const int kFromTypeFieldNumber = 1;
  ::google::protobuf::int32 fromtype() const;
  void set_fromtype(::google::protobuf::int32 value);

  // int32 noticeType = 8;
  void clear_noticetype();
  static const int kNoticeTypeFieldNumber = 8;
  ::google::protobuf::int32 noticetype() const;
  void set_noticetype(::google::protobuf::int32 value);

  // int64 dstId = 5;
  void clear_dstid();
  static const int kDstIdFieldNumber = 5;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int64 sendTime = 6;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 6;
  ::google::protobuf::int64 sendtime() const;
  void set_sendtime(::google::protobuf::int64 value);

  // int64 msgId = 7;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 7;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 nodeStartTime = 10;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 10;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int32 msgSeq = 12;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 12;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.PushNoticeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fromnickname_;
  ::google::protobuf::internal::ArenaStringPtr fromheadimg_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::google::protobuf::int64 fromid_;
  ::google::protobuf::int32 fromtype_;
  ::google::protobuf::int32 noticetype_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int64 sendtime_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int32 msgseq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushNoticeResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PushNoticeResp) */ {
 public:
  PushNoticeResp();
  virtual ~PushNoticeResp();

  PushNoticeResp(const PushNoticeResp& from);

  inline PushNoticeResp& operator=(const PushNoticeResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushNoticeResp(PushNoticeResp&& from) noexcept
    : PushNoticeResp() {
    *this = ::std::move(from);
  }

  inline PushNoticeResp& operator=(PushNoticeResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushNoticeResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushNoticeResp* internal_default_instance() {
    return reinterpret_cast<const PushNoticeResp*>(
               &_PushNoticeResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PushNoticeResp* other);
  friend void swap(PushNoticeResp& a, PushNoticeResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushNoticeResp* New() const final {
    return CreateMaybeMessage<PushNoticeResp>(NULL);
  }

  PushNoticeResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushNoticeResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushNoticeResp& from);
  void MergeFrom(const PushNoticeResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushNoticeResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:im_client.PushNoticeResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendMsgStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.SendMsgStateReq) */ {
 public:
  SendMsgStateReq();
  virtual ~SendMsgStateReq();

  SendMsgStateReq(const SendMsgStateReq& from);

  inline SendMsgStateReq& operator=(const SendMsgStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendMsgStateReq(SendMsgStateReq&& from) noexcept
    : SendMsgStateReq() {
    *this = ::std::move(from);
  }

  inline SendMsgStateReq& operator=(SendMsgStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMsgStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMsgStateReq* internal_default_instance() {
    return reinterpret_cast<const SendMsgStateReq*>(
               &_SendMsgStateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(SendMsgStateReq* other);
  friend void swap(SendMsgStateReq& a, SendMsgStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendMsgStateReq* New() const final {
    return CreateMaybeMessage<SendMsgStateReq>(NULL);
  }

  SendMsgStateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendMsgStateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendMsgStateReq& from);
  void MergeFrom(const SendMsgStateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendMsgStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 opMsgId = 6;
  int opmsgid_size() const;
  void clear_opmsgid();
  static const int kOpMsgIdFieldNumber = 6;
  ::google::protobuf::int64 opmsgid(int index) const;
  void set_opmsgid(int index, ::google::protobuf::int64 value);
  void add_opmsgid(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      opmsgid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_opmsgid();

  // string nodeId = 8;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 8;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // int64 fromId = 1;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int64 fromid() const;
  void set_fromid(::google::protobuf::int64 value);

  // int64 dstId = 2;
  void clear_dstid();
  static const int kDstIdFieldNumber = 2;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int64 clientMsgId = 4;
  void clear_clientmsgid();
  static const int kClientMsgIdFieldNumber = 4;
  ::google::protobuf::int64 clientmsgid() const;
  void set_clientmsgid(::google::protobuf::int64 value);

  // int64 msgId = 5;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 5;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 msgState = 3;
  void clear_msgstate();
  static const int kMsgStateFieldNumber = 3;
  ::google::protobuf::int32 msgstate() const;
  void set_msgstate(::google::protobuf::int32 value);

  // int32 nodeStartTime = 7;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 7;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int64 sendTime = 10;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 10;
  ::google::protobuf::int64 sendtime() const;
  void set_sendtime(::google::protobuf::int64 value);

  // int32 msgSeq = 9;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 9;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.SendMsgStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > opmsgid_;
  mutable int _opmsgid_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::google::protobuf::int64 fromid_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int64 clientmsgid_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 msgstate_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int64 sendtime_;
  ::google::protobuf::int32 msgseq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendMsgStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.SendMsgStateResp) */ {
 public:
  SendMsgStateResp();
  virtual ~SendMsgStateResp();

  SendMsgStateResp(const SendMsgStateResp& from);

  inline SendMsgStateResp& operator=(const SendMsgStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendMsgStateResp(SendMsgStateResp&& from) noexcept
    : SendMsgStateResp() {
    *this = ::std::move(from);
  }

  inline SendMsgStateResp& operator=(SendMsgStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMsgStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMsgStateResp* internal_default_instance() {
    return reinterpret_cast<const SendMsgStateResp*>(
               &_SendMsgStateResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(SendMsgStateResp* other);
  friend void swap(SendMsgStateResp& a, SendMsgStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendMsgStateResp* New() const final {
    return CreateMaybeMessage<SendMsgStateResp>(NULL);
  }

  SendMsgStateResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendMsgStateResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendMsgStateResp& from);
  void MergeFrom(const SendMsgStateResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendMsgStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 opMsgId = 5;
  int opmsgid_size() const;
  void clear_opmsgid();
  static const int kOpMsgIdFieldNumber = 5;
  ::google::protobuf::int64 opmsgid(int index) const;
  void set_opmsgid(int index, ::google::protobuf::int64 value);
  void add_opmsgid(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      opmsgid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_opmsgid();

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // string nodeId = 7;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 7;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // int64 clientMsgId = 3;
  void clear_clientmsgid();
  static const int kClientMsgIdFieldNumber = 3;
  ::google::protobuf::int64 clientmsgid() const;
  void set_clientmsgid(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 nodeStartTime = 6;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 6;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int64 msgId = 4;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 4;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int64 serverTime = 9;
  void clear_servertime();
  static const int kServerTimeFieldNumber = 9;
  ::google::protobuf::int64 servertime() const;
  void set_servertime(::google::protobuf::int64 value);

  // int32 msgSeq = 8;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 8;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.SendMsgStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > opmsgid_;
  mutable int _opmsgid_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::google::protobuf::int64 clientmsgid_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int64 servertime_;
  ::google::protobuf::int32 msgseq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecvMsgStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.RecvMsgStateResp) */ {
 public:
  RecvMsgStateResp();
  virtual ~RecvMsgStateResp();

  RecvMsgStateResp(const RecvMsgStateResp& from);

  inline RecvMsgStateResp& operator=(const RecvMsgStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecvMsgStateResp(RecvMsgStateResp&& from) noexcept
    : RecvMsgStateResp() {
    *this = ::std::move(from);
  }

  inline RecvMsgStateResp& operator=(RecvMsgStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvMsgStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecvMsgStateResp* internal_default_instance() {
    return reinterpret_cast<const RecvMsgStateResp*>(
               &_RecvMsgStateResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(RecvMsgStateResp* other);
  friend void swap(RecvMsgStateResp& a, RecvMsgStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecvMsgStateResp* New() const final {
    return CreateMaybeMessage<RecvMsgStateResp>(NULL);
  }

  RecvMsgStateResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RecvMsgStateResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RecvMsgStateResp& from);
  void MergeFrom(const RecvMsgStateResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecvMsgStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nodeId = 3;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 3;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // int64 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 nodeStartTime = 2;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 2;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int32 msgSeq = 4;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 4;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.RecvMsgStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int32 msgseq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PullUserOnlineInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PullUserOnlineInfoReq) */ {
 public:
  PullUserOnlineInfoReq();
  virtual ~PullUserOnlineInfoReq();

  PullUserOnlineInfoReq(const PullUserOnlineInfoReq& from);

  inline PullUserOnlineInfoReq& operator=(const PullUserOnlineInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullUserOnlineInfoReq(PullUserOnlineInfoReq&& from) noexcept
    : PullUserOnlineInfoReq() {
    *this = ::std::move(from);
  }

  inline PullUserOnlineInfoReq& operator=(PullUserOnlineInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullUserOnlineInfoReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PullUserOnlineInfoReq* internal_default_instance() {
    return reinterpret_cast<const PullUserOnlineInfoReq*>(
               &_PullUserOnlineInfoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(PullUserOnlineInfoReq* other);
  friend void swap(PullUserOnlineInfoReq& a, PullUserOnlineInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullUserOnlineInfoReq* New() const final {
    return CreateMaybeMessage<PullUserOnlineInfoReq>(NULL);
  }

  PullUserOnlineInfoReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PullUserOnlineInfoReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PullUserOnlineInfoReq& from);
  void MergeFrom(const PullUserOnlineInfoReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PullUserOnlineInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 userIds = 2;
  int userids_size() const;
  void clear_userids();
  static const int kUserIdsFieldNumber = 2;
  ::google::protobuf::int64 userids(int index) const;
  void set_userids(int index, ::google::protobuf::int64 value);
  void add_userids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      userids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_userids();

  // int64 fromId = 1;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int64 fromid() const;
  void set_fromid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:im_client.PullUserOnlineInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > userids_;
  mutable int _userids_cached_byte_size_;
  ::google::protobuf::int64 fromid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PullUserOnlineInfoResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PullUserOnlineInfoResp) */ {
 public:
  PullUserOnlineInfoResp();
  virtual ~PullUserOnlineInfoResp();

  PullUserOnlineInfoResp(const PullUserOnlineInfoResp& from);

  inline PullUserOnlineInfoResp& operator=(const PullUserOnlineInfoResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullUserOnlineInfoResp(PullUserOnlineInfoResp&& from) noexcept
    : PullUserOnlineInfoResp() {
    *this = ::std::move(from);
  }

  inline PullUserOnlineInfoResp& operator=(PullUserOnlineInfoResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullUserOnlineInfoResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PullUserOnlineInfoResp* internal_default_instance() {
    return reinterpret_cast<const PullUserOnlineInfoResp*>(
               &_PullUserOnlineInfoResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(PullUserOnlineInfoResp* other);
  friend void swap(PullUserOnlineInfoResp& a, PullUserOnlineInfoResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullUserOnlineInfoResp* New() const final {
    return CreateMaybeMessage<PullUserOnlineInfoResp>(NULL);
  }

  PullUserOnlineInfoResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PullUserOnlineInfoResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PullUserOnlineInfoResp& from);
  void MergeFrom(const PullUserOnlineInfoResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PullUserOnlineInfoResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // string msg = 5;
  void clear_msg();
  static const int kMsgFieldNumber = 5;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 dstType = 4;
  void clear_dsttype();
  static const int kDstTypeFieldNumber = 4;
  ::google::protobuf::int32 dsttype() const;
  void set_dsttype(::google::protobuf::int32 value);

  // int64 dstId = 3;
  void clear_dstid();
  static const int kDstIdFieldNumber = 3;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:im_client.PullUserOnlineInfoResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 dsttype_;
  ::google::protobuf::int64 dstid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class reportNoReadMsgSumReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.reportNoReadMsgSumReq) */ {
 public:
  reportNoReadMsgSumReq();
  virtual ~reportNoReadMsgSumReq();

  reportNoReadMsgSumReq(const reportNoReadMsgSumReq& from);

  inline reportNoReadMsgSumReq& operator=(const reportNoReadMsgSumReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  reportNoReadMsgSumReq(reportNoReadMsgSumReq&& from) noexcept
    : reportNoReadMsgSumReq() {
    *this = ::std::move(from);
  }

  inline reportNoReadMsgSumReq& operator=(reportNoReadMsgSumReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const reportNoReadMsgSumReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const reportNoReadMsgSumReq* internal_default_instance() {
    return reinterpret_cast<const reportNoReadMsgSumReq*>(
               &_reportNoReadMsgSumReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(reportNoReadMsgSumReq* other);
  friend void swap(reportNoReadMsgSumReq& a, reportNoReadMsgSumReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline reportNoReadMsgSumReq* New() const final {
    return CreateMaybeMessage<reportNoReadMsgSumReq>(NULL);
  }

  reportNoReadMsgSumReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<reportNoReadMsgSumReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const reportNoReadMsgSumReq& from);
  void MergeFrom(const reportNoReadMsgSumReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(reportNoReadMsgSumReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int32 noReadSum = 2;
  void clear_noreadsum();
  static const int kNoReadSumFieldNumber = 2;
  ::google::protobuf::int32 noreadsum() const;
  void set_noreadsum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.reportNoReadMsgSumReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 noreadsum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class reportNoReadMsgSumResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.reportNoReadMsgSumResp) */ {
 public:
  reportNoReadMsgSumResp();
  virtual ~reportNoReadMsgSumResp();

  reportNoReadMsgSumResp(const reportNoReadMsgSumResp& from);

  inline reportNoReadMsgSumResp& operator=(const reportNoReadMsgSumResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  reportNoReadMsgSumResp(reportNoReadMsgSumResp&& from) noexcept
    : reportNoReadMsgSumResp() {
    *this = ::std::move(from);
  }

  inline reportNoReadMsgSumResp& operator=(reportNoReadMsgSumResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const reportNoReadMsgSumResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const reportNoReadMsgSumResp* internal_default_instance() {
    return reinterpret_cast<const reportNoReadMsgSumResp*>(
               &_reportNoReadMsgSumResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(reportNoReadMsgSumResp* other);
  friend void swap(reportNoReadMsgSumResp& a, reportNoReadMsgSumResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline reportNoReadMsgSumResp* New() const final {
    return CreateMaybeMessage<reportNoReadMsgSumResp>(NULL);
  }

  reportNoReadMsgSumResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<reportNoReadMsgSumResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const reportNoReadMsgSumResp& from);
  void MergeFrom(const reportNoReadMsgSumResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(reportNoReadMsgSumResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.reportNoReadMsgSumResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class sendInputStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.sendInputStateReq) */ {
 public:
  sendInputStateReq();
  virtual ~sendInputStateReq();

  sendInputStateReq(const sendInputStateReq& from);

  inline sendInputStateReq& operator=(const sendInputStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  sendInputStateReq(sendInputStateReq&& from) noexcept
    : sendInputStateReq() {
    *this = ::std::move(from);
  }

  inline sendInputStateReq& operator=(sendInputStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const sendInputStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const sendInputStateReq* internal_default_instance() {
    return reinterpret_cast<const sendInputStateReq*>(
               &_sendInputStateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(sendInputStateReq* other);
  friend void swap(sendInputStateReq& a, sendInputStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline sendInputStateReq* New() const final {
    return CreateMaybeMessage<sendInputStateReq>(NULL);
  }

  sendInputStateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<sendInputStateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const sendInputStateReq& from);
  void MergeFrom(const sendInputStateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(sendInputStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 5;
  void clear_msg();
  static const int kMsgFieldNumber = 5;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int64 fromId = 1;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int64 fromid() const;
  void set_fromid(::google::protobuf::int64 value);

  // int64 dstId = 3;
  void clear_dstid();
  static const int kDstIdFieldNumber = 3;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int32 dstType = 2;
  void clear_dsttype();
  static const int kDstTypeFieldNumber = 2;
  ::google::protobuf::int32 dsttype() const;
  void set_dsttype(::google::protobuf::int32 value);

  // int32 state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.sendInputStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 fromid_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int32 dsttype_;
  ::google::protobuf::int32 state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class sendInputStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.sendInputStateResp) */ {
 public:
  sendInputStateResp();
  virtual ~sendInputStateResp();

  sendInputStateResp(const sendInputStateResp& from);

  inline sendInputStateResp& operator=(const sendInputStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  sendInputStateResp(sendInputStateResp&& from) noexcept
    : sendInputStateResp() {
    *this = ::std::move(from);
  }

  inline sendInputStateResp& operator=(sendInputStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const sendInputStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const sendInputStateResp* internal_default_instance() {
    return reinterpret_cast<const sendInputStateResp*>(
               &_sendInputStateResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(sendInputStateResp* other);
  friend void swap(sendInputStateResp& a, sendInputStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline sendInputStateResp* New() const final {
    return CreateMaybeMessage<sendInputStateResp>(NULL);
  }

  sendInputStateResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<sendInputStateResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const sendInputStateResp& from);
  void MergeFrom(const sendInputStateResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(sendInputStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.sendInputStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class recvInputStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.recvInputStateReq) */ {
 public:
  recvInputStateReq();
  virtual ~recvInputStateReq();

  recvInputStateReq(const recvInputStateReq& from);

  inline recvInputStateReq& operator=(const recvInputStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  recvInputStateReq(recvInputStateReq&& from) noexcept
    : recvInputStateReq() {
    *this = ::std::move(from);
  }

  inline recvInputStateReq& operator=(recvInputStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const recvInputStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const recvInputStateReq* internal_default_instance() {
    return reinterpret_cast<const recvInputStateReq*>(
               &_recvInputStateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(recvInputStateReq* other);
  friend void swap(recvInputStateReq& a, recvInputStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline recvInputStateReq* New() const final {
    return CreateMaybeMessage<recvInputStateReq>(NULL);
  }

  recvInputStateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<recvInputStateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const recvInputStateReq& from);
  void MergeFrom(const recvInputStateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(recvInputStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 5;
  void clear_msg();
  static const int kMsgFieldNumber = 5;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int64 fromId = 1;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int64 fromid() const;
  void set_fromid(::google::protobuf::int64 value);

  // int64 dstId = 3;
  void clear_dstid();
  static const int kDstIdFieldNumber = 3;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int32 dstType = 2;
  void clear_dsttype();
  static const int kDstTypeFieldNumber = 2;
  ::google::protobuf::int32 dsttype() const;
  void set_dsttype(::google::protobuf::int32 value);

  // int32 state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.recvInputStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 fromid_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int32 dsttype_;
  ::google::protobuf::int32 state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class recvInputStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.recvInputStateResp) */ {
 public:
  recvInputStateResp();
  virtual ~recvInputStateResp();

  recvInputStateResp(const recvInputStateResp& from);

  inline recvInputStateResp& operator=(const recvInputStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  recvInputStateResp(recvInputStateResp&& from) noexcept
    : recvInputStateResp() {
    *this = ::std::move(from);
  }

  inline recvInputStateResp& operator=(recvInputStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const recvInputStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const recvInputStateResp* internal_default_instance() {
    return reinterpret_cast<const recvInputStateResp*>(
               &_recvInputStateResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(recvInputStateResp* other);
  friend void swap(recvInputStateResp& a, recvInputStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline recvInputStateResp* New() const final {
    return CreateMaybeMessage<recvInputStateResp>(NULL);
  }

  recvInputStateResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<recvInputStateResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const recvInputStateResp& from);
  void MergeFrom(const recvInputStateResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(recvInputStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.recvInputStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.MsgStatus) */ {
 public:
  MsgStatus();
  virtual ~MsgStatus();

  MsgStatus(const MsgStatus& from);

  inline MsgStatus& operator=(const MsgStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgStatus(MsgStatus&& from) noexcept
    : MsgStatus() {
    *this = ::std::move(from);
  }

  inline MsgStatus& operator=(MsgStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgStatus* internal_default_instance() {
    return reinterpret_cast<const MsgStatus*>(
               &_MsgStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(MsgStatus* other);
  friend void swap(MsgStatus& a, MsgStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgStatus* New() const final {
    return CreateMaybeMessage<MsgStatus>(NULL);
  }

  MsgStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgStatus& from);
  void MergeFrom(const MsgStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 msgId = 2;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 msgState = 1;
  void clear_msgstate();
  static const int kMsgStateFieldNumber = 1;
  ::google::protobuf::int32 msgstate() const;
  void set_msgstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.MsgStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 msgstate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchSendMsgStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.BatchSendMsgStateReq) */ {
 public:
  BatchSendMsgStateReq();
  virtual ~BatchSendMsgStateReq();

  BatchSendMsgStateReq(const BatchSendMsgStateReq& from);

  inline BatchSendMsgStateReq& operator=(const BatchSendMsgStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchSendMsgStateReq(BatchSendMsgStateReq&& from) noexcept
    : BatchSendMsgStateReq() {
    *this = ::std::move(from);
  }

  inline BatchSendMsgStateReq& operator=(BatchSendMsgStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchSendMsgStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchSendMsgStateReq* internal_default_instance() {
    return reinterpret_cast<const BatchSendMsgStateReq*>(
               &_BatchSendMsgStateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(BatchSendMsgStateReq* other);
  friend void swap(BatchSendMsgStateReq& a, BatchSendMsgStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchSendMsgStateReq* New() const final {
    return CreateMaybeMessage<BatchSendMsgStateReq>(NULL);
  }

  BatchSendMsgStateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchSendMsgStateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchSendMsgStateReq& from);
  void MergeFrom(const BatchSendMsgStateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchSendMsgStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .im_client.MsgStatus opMsgId = 5;
  int opmsgid_size() const;
  void clear_opmsgid();
  static const int kOpMsgIdFieldNumber = 5;
  ::im_client::MsgStatus* mutable_opmsgid(int index);
  ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus >*
      mutable_opmsgid();
  const ::im_client::MsgStatus& opmsgid(int index) const;
  ::im_client::MsgStatus* add_opmsgid();
  const ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus >&
      opmsgid() const;

  // string nodeId = 7;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 7;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // int64 fromId = 1;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int64 fromid() const;
  void set_fromid(::google::protobuf::int64 value);

  // int64 dstId = 2;
  void clear_dstid();
  static const int kDstIdFieldNumber = 2;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int64 clientMsgId = 3;
  void clear_clientmsgid();
  static const int kClientMsgIdFieldNumber = 3;
  ::google::protobuf::int64 clientmsgid() const;
  void set_clientmsgid(::google::protobuf::int64 value);

  // int64 msgId = 4;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 4;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 nodeStartTime = 6;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 6;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int32 msgSeq = 8;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 8;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.BatchSendMsgStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus > opmsgid_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::google::protobuf::int64 fromid_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int64 clientmsgid_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int32 msgseq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchSendMsgStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.BatchSendMsgStateResp) */ {
 public:
  BatchSendMsgStateResp();
  virtual ~BatchSendMsgStateResp();

  BatchSendMsgStateResp(const BatchSendMsgStateResp& from);

  inline BatchSendMsgStateResp& operator=(const BatchSendMsgStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchSendMsgStateResp(BatchSendMsgStateResp&& from) noexcept
    : BatchSendMsgStateResp() {
    *this = ::std::move(from);
  }

  inline BatchSendMsgStateResp& operator=(BatchSendMsgStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchSendMsgStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchSendMsgStateResp* internal_default_instance() {
    return reinterpret_cast<const BatchSendMsgStateResp*>(
               &_BatchSendMsgStateResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(BatchSendMsgStateResp* other);
  friend void swap(BatchSendMsgStateResp& a, BatchSendMsgStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchSendMsgStateResp* New() const final {
    return CreateMaybeMessage<BatchSendMsgStateResp>(NULL);
  }

  BatchSendMsgStateResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchSendMsgStateResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchSendMsgStateResp& from);
  void MergeFrom(const BatchSendMsgStateResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchSendMsgStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .im_client.MsgStatus opMsgId = 5;
  int opmsgid_size() const;
  void clear_opmsgid();
  static const int kOpMsgIdFieldNumber = 5;
  ::im_client::MsgStatus* mutable_opmsgid(int index);
  ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus >*
      mutable_opmsgid();
  const ::im_client::MsgStatus& opmsgid(int index) const;
  ::im_client::MsgStatus* add_opmsgid();
  const ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus >&
      opmsgid() const;

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // string nodeId = 7;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 7;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // int64 clientMsgId = 3;
  void clear_clientmsgid();
  static const int kClientMsgIdFieldNumber = 3;
  ::google::protobuf::int64 clientmsgid() const;
  void set_clientmsgid(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 nodeStartTime = 6;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 6;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int64 msgId = 4;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 4;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 msgSeq = 8;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 8;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.BatchSendMsgStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus > opmsgid_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::google::protobuf::int64 clientmsgid_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 msgseq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchRecvMsgStateResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.BatchRecvMsgStateResp) */ {
 public:
  BatchRecvMsgStateResp();
  virtual ~BatchRecvMsgStateResp();

  BatchRecvMsgStateResp(const BatchRecvMsgStateResp& from);

  inline BatchRecvMsgStateResp& operator=(const BatchRecvMsgStateResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchRecvMsgStateResp(BatchRecvMsgStateResp&& from) noexcept
    : BatchRecvMsgStateResp() {
    *this = ::std::move(from);
  }

  inline BatchRecvMsgStateResp& operator=(BatchRecvMsgStateResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchRecvMsgStateResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchRecvMsgStateResp* internal_default_instance() {
    return reinterpret_cast<const BatchRecvMsgStateResp*>(
               &_BatchRecvMsgStateResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(BatchRecvMsgStateResp* other);
  friend void swap(BatchRecvMsgStateResp& a, BatchRecvMsgStateResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchRecvMsgStateResp* New() const final {
    return CreateMaybeMessage<BatchRecvMsgStateResp>(NULL);
  }

  BatchRecvMsgStateResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BatchRecvMsgStateResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BatchRecvMsgStateResp& from);
  void MergeFrom(const BatchRecvMsgStateResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchRecvMsgStateResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nodeId = 3;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 3;
  const ::std::string& nodeid() const;
  void set_nodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_nodeid(::std::string&& value);
  #endif
  void set_nodeid(const char* value);
  void set_nodeid(const char* value, size_t size);
  ::std::string* mutable_nodeid();
  ::std::string* release_nodeid();
  void set_allocated_nodeid(::std::string* nodeid);

  // int64 msgId = 1;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int64 msgid() const;
  void set_msgid(::google::protobuf::int64 value);

  // int32 nodeStartTime = 2;
  void clear_nodestarttime();
  static const int kNodeStartTimeFieldNumber = 2;
  ::google::protobuf::int32 nodestarttime() const;
  void set_nodestarttime(::google::protobuf::int32 value);

  // int32 msgSeq = 4;
  void clear_msgseq();
  static const int kMsgSeqFieldNumber = 4;
  ::google::protobuf::int32 msgseq() const;
  void set_msgseq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.BatchRecvMsgStateResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nodeid_;
  ::google::protobuf::int64 msgid_;
  ::google::protobuf::int32 nodestarttime_;
  ::google::protobuf::int32 msgseq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushFriendStatusReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PushFriendStatusReq) */ {
 public:
  PushFriendStatusReq();
  virtual ~PushFriendStatusReq();

  PushFriendStatusReq(const PushFriendStatusReq& from);

  inline PushFriendStatusReq& operator=(const PushFriendStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushFriendStatusReq(PushFriendStatusReq&& from) noexcept
    : PushFriendStatusReq() {
    *this = ::std::move(from);
  }

  inline PushFriendStatusReq& operator=(PushFriendStatusReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushFriendStatusReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushFriendStatusReq* internal_default_instance() {
    return reinterpret_cast<const PushFriendStatusReq*>(
               &_PushFriendStatusReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(PushFriendStatusReq* other);
  friend void swap(PushFriendStatusReq& a, PushFriendStatusReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushFriendStatusReq* New() const final {
    return CreateMaybeMessage<PushFriendStatusReq>(NULL);
  }

  PushFriendStatusReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushFriendStatusReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushFriendStatusReq& from);
  void MergeFrom(const PushFriendStatusReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushFriendStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int64 dstId = 1;
  void clear_dstid();
  static const int kDstIdFieldNumber = 1;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:im_client.PushFriendStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 dstid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushFriendStatusResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PushFriendStatusResp) */ {
 public:
  PushFriendStatusResp();
  virtual ~PushFriendStatusResp();

  PushFriendStatusResp(const PushFriendStatusResp& from);

  inline PushFriendStatusResp& operator=(const PushFriendStatusResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushFriendStatusResp(PushFriendStatusResp&& from) noexcept
    : PushFriendStatusResp() {
    *this = ::std::move(from);
  }

  inline PushFriendStatusResp& operator=(PushFriendStatusResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushFriendStatusResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushFriendStatusResp* internal_default_instance() {
    return reinterpret_cast<const PushFriendStatusResp*>(
               &_PushFriendStatusResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(PushFriendStatusResp* other);
  friend void swap(PushFriendStatusResp& a, PushFriendStatusResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushFriendStatusResp* New() const final {
    return CreateMaybeMessage<PushFriendStatusResp>(NULL);
  }

  PushFriendStatusResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushFriendStatusResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushFriendStatusResp& from);
  void MergeFrom(const PushFriendStatusResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushFriendStatusResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.PushFriendStatusResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendSubscribeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.SendSubscribeReq) */ {
 public:
  SendSubscribeReq();
  virtual ~SendSubscribeReq();

  SendSubscribeReq(const SendSubscribeReq& from);

  inline SendSubscribeReq& operator=(const SendSubscribeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendSubscribeReq(SendSubscribeReq&& from) noexcept
    : SendSubscribeReq() {
    *this = ::std::move(from);
  }

  inline SendSubscribeReq& operator=(SendSubscribeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendSubscribeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendSubscribeReq* internal_default_instance() {
    return reinterpret_cast<const SendSubscribeReq*>(
               &_SendSubscribeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(SendSubscribeReq* other);
  friend void swap(SendSubscribeReq& a, SendSubscribeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendSubscribeReq* New() const final {
    return CreateMaybeMessage<SendSubscribeReq>(NULL);
  }

  SendSubscribeReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendSubscribeReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendSubscribeReq& from);
  void MergeFrom(const SendSubscribeReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendSubscribeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int64 fromId = 1;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int64 fromid() const;
  void set_fromid(::google::protobuf::int64 value);

  // int64 dstId = 2;
  void clear_dstid();
  static const int kDstIdFieldNumber = 2;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int32 subCmd = 3;
  void clear_subcmd();
  static const int kSubCmdFieldNumber = 3;
  ::google::protobuf::int32 subcmd() const;
  void set_subcmd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.SendSubscribeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 fromid_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int32 subcmd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendSubscribeResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.SendSubscribeResp) */ {
 public:
  SendSubscribeResp();
  virtual ~SendSubscribeResp();

  SendSubscribeResp(const SendSubscribeResp& from);

  inline SendSubscribeResp& operator=(const SendSubscribeResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendSubscribeResp(SendSubscribeResp&& from) noexcept
    : SendSubscribeResp() {
    *this = ::std::move(from);
  }

  inline SendSubscribeResp& operator=(SendSubscribeResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendSubscribeResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendSubscribeResp* internal_default_instance() {
    return reinterpret_cast<const SendSubscribeResp*>(
               &_SendSubscribeResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(SendSubscribeResp* other);
  friend void swap(SendSubscribeResp& a, SendSubscribeResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendSubscribeResp* New() const final {
    return CreateMaybeMessage<SendSubscribeResp>(NULL);
  }

  SendSubscribeResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendSubscribeResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendSubscribeResp& from);
  void MergeFrom(const SendSubscribeResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendSubscribeResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int64 dstId = 3;
  void clear_dstid();
  static const int kDstIdFieldNumber = 3;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.SendSubscribeResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushSubscribeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PushSubscribeReq) */ {
 public:
  PushSubscribeReq();
  virtual ~PushSubscribeReq();

  PushSubscribeReq(const PushSubscribeReq& from);

  inline PushSubscribeReq& operator=(const PushSubscribeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushSubscribeReq(PushSubscribeReq&& from) noexcept
    : PushSubscribeReq() {
    *this = ::std::move(from);
  }

  inline PushSubscribeReq& operator=(PushSubscribeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushSubscribeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushSubscribeReq* internal_default_instance() {
    return reinterpret_cast<const PushSubscribeReq*>(
               &_PushSubscribeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(PushSubscribeReq* other);
  friend void swap(PushSubscribeReq& a, PushSubscribeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushSubscribeReq* New() const final {
    return CreateMaybeMessage<PushSubscribeReq>(NULL);
  }

  PushSubscribeReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushSubscribeReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushSubscribeReq& from);
  void MergeFrom(const PushSubscribeReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushSubscribeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int64 dstId = 1;
  void clear_dstid();
  static const int kDstIdFieldNumber = 1;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int32 subCmd = 2;
  void clear_subcmd();
  static const int kSubCmdFieldNumber = 2;
  ::google::protobuf::int32 subcmd() const;
  void set_subcmd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.PushSubscribeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int32 subcmd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushSubscribeResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PushSubscribeResp) */ {
 public:
  PushSubscribeResp();
  virtual ~PushSubscribeResp();

  PushSubscribeResp(const PushSubscribeResp& from);

  inline PushSubscribeResp& operator=(const PushSubscribeResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushSubscribeResp(PushSubscribeResp&& from) noexcept
    : PushSubscribeResp() {
    *this = ::std::move(from);
  }

  inline PushSubscribeResp& operator=(PushSubscribeResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PushSubscribeResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushSubscribeResp* internal_default_instance() {
    return reinterpret_cast<const PushSubscribeResp*>(
               &_PushSubscribeResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(PushSubscribeResp* other);
  friend void swap(PushSubscribeResp& a, PushSubscribeResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushSubscribeResp* New() const final {
    return CreateMaybeMessage<PushSubscribeResp>(NULL);
  }

  PushSubscribeResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushSubscribeResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushSubscribeResp& from);
  void MergeFrom(const PushSubscribeResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushSubscribeResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.PushSubscribeResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PullGroupOnlineInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PullGroupOnlineInfoReq) */ {
 public:
  PullGroupOnlineInfoReq();
  virtual ~PullGroupOnlineInfoReq();

  PullGroupOnlineInfoReq(const PullGroupOnlineInfoReq& from);

  inline PullGroupOnlineInfoReq& operator=(const PullGroupOnlineInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullGroupOnlineInfoReq(PullGroupOnlineInfoReq&& from) noexcept
    : PullGroupOnlineInfoReq() {
    *this = ::std::move(from);
  }

  inline PullGroupOnlineInfoReq& operator=(PullGroupOnlineInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullGroupOnlineInfoReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PullGroupOnlineInfoReq* internal_default_instance() {
    return reinterpret_cast<const PullGroupOnlineInfoReq*>(
               &_PullGroupOnlineInfoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(PullGroupOnlineInfoReq* other);
  friend void swap(PullGroupOnlineInfoReq& a, PullGroupOnlineInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullGroupOnlineInfoReq* New() const final {
    return CreateMaybeMessage<PullGroupOnlineInfoReq>(NULL);
  }

  PullGroupOnlineInfoReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PullGroupOnlineInfoReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PullGroupOnlineInfoReq& from);
  void MergeFrom(const PullGroupOnlineInfoReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PullGroupOnlineInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 userIds = 2;
  int userids_size() const;
  void clear_userids();
  static const int kUserIdsFieldNumber = 2;
  ::google::protobuf::int64 userids(int index) const;
  void set_userids(int index, ::google::protobuf::int64 value);
  void add_userids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      userids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_userids();

  // int64 fromId = 1;
  void clear_fromid();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int64 fromid() const;
  void set_fromid(::google::protobuf::int64 value);

  // int64 groupId = 3;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 3;
  ::google::protobuf::int64 groupid() const;
  void set_groupid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:im_client.PullGroupOnlineInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > userids_;
  mutable int _userids_cached_byte_size_;
  ::google::protobuf::int64 fromid_;
  ::google::protobuf::int64 groupid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PullGroupOnlineInfoResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:im_client.PullGroupOnlineInfoResp) */ {
 public:
  PullGroupOnlineInfoResp();
  virtual ~PullGroupOnlineInfoResp();

  PullGroupOnlineInfoResp(const PullGroupOnlineInfoResp& from);

  inline PullGroupOnlineInfoResp& operator=(const PullGroupOnlineInfoResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullGroupOnlineInfoResp(PullGroupOnlineInfoResp&& from) noexcept
    : PullGroupOnlineInfoResp() {
    *this = ::std::move(from);
  }

  inline PullGroupOnlineInfoResp& operator=(PullGroupOnlineInfoResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullGroupOnlineInfoResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PullGroupOnlineInfoResp* internal_default_instance() {
    return reinterpret_cast<const PullGroupOnlineInfoResp*>(
               &_PullGroupOnlineInfoResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(PullGroupOnlineInfoResp* other);
  friend void swap(PullGroupOnlineInfoResp& a, PullGroupOnlineInfoResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullGroupOnlineInfoResp* New() const final {
    return CreateMaybeMessage<PullGroupOnlineInfoResp>(NULL);
  }

  PullGroupOnlineInfoResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PullGroupOnlineInfoResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PullGroupOnlineInfoResp& from);
  void MergeFrom(const PullGroupOnlineInfoResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PullGroupOnlineInfoResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codeMsg = 2;
  void clear_codemsg();
  static const int kCodeMsgFieldNumber = 2;
  const ::std::string& codemsg() const;
  void set_codemsg(const ::std::string& value);
  #if LANG_CXX11
  void set_codemsg(::std::string&& value);
  #endif
  void set_codemsg(const char* value);
  void set_codemsg(const char* value, size_t size);
  ::std::string* mutable_codemsg();
  ::std::string* release_codemsg();
  void set_allocated_codemsg(::std::string* codemsg);

  // string msg = 5;
  void clear_msg();
  static const int kMsgFieldNumber = 5;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int64 dstId = 3;
  void clear_dstid();
  static const int kDstIdFieldNumber = 3;
  ::google::protobuf::int64 dstid() const;
  void set_dstid(::google::protobuf::int64 value);

  // int64 groupId = 4;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 4;
  ::google::protobuf::int64 groupid() const;
  void set_groupid(::google::protobuf::int64 value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:im_client.PullGroupOnlineInfoResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codemsg_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 dstid_;
  ::google::protobuf::int64 groupid_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ForceExitReq

// int64 userId = 1;
inline void ForceExitReq::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ForceExitReq::userid() const {
  // @@protoc_insertion_point(field_get:im_client.ForceExitReq.userId)
  return userid_;
}
inline void ForceExitReq::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:im_client.ForceExitReq.userId)
}

// int32 opType = 2;
inline void ForceExitReq::clear_optype() {
  optype_ = 0;
}
inline ::google::protobuf::int32 ForceExitReq::optype() const {
  // @@protoc_insertion_point(field_get:im_client.ForceExitReq.opType)
  return optype_;
}
inline void ForceExitReq::set_optype(::google::protobuf::int32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:im_client.ForceExitReq.opType)
}

// string tips = 3;
inline void ForceExitReq::clear_tips() {
  tips_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForceExitReq::tips() const {
  // @@protoc_insertion_point(field_get:im_client.ForceExitReq.tips)
  return tips_.GetNoArena();
}
inline void ForceExitReq::set_tips(const ::std::string& value) {
  
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.ForceExitReq.tips)
}
#if LANG_CXX11
inline void ForceExitReq::set_tips(::std::string&& value) {
  
  tips_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.ForceExitReq.tips)
}
#endif
inline void ForceExitReq::set_tips(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.ForceExitReq.tips)
}
inline void ForceExitReq::set_tips(const char* value, size_t size) {
  
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.ForceExitReq.tips)
}
inline ::std::string* ForceExitReq::mutable_tips() {
  
  // @@protoc_insertion_point(field_mutable:im_client.ForceExitReq.tips)
  return tips_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForceExitReq::release_tips() {
  // @@protoc_insertion_point(field_release:im_client.ForceExitReq.tips)
  
  return tips_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForceExitReq::set_allocated_tips(::std::string* tips) {
  if (tips != NULL) {
    
  } else {
    
  }
  tips_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tips);
  // @@protoc_insertion_point(field_set_allocated:im_client.ForceExitReq.tips)
}

// repeated string devids = 4;
inline int ForceExitReq::devids_size() const {
  return devids_.size();
}
inline void ForceExitReq::clear_devids() {
  devids_.Clear();
}
inline const ::std::string& ForceExitReq::devids(int index) const {
  // @@protoc_insertion_point(field_get:im_client.ForceExitReq.devids)
  return devids_.Get(index);
}
inline ::std::string* ForceExitReq::mutable_devids(int index) {
  // @@protoc_insertion_point(field_mutable:im_client.ForceExitReq.devids)
  return devids_.Mutable(index);
}
inline void ForceExitReq::set_devids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:im_client.ForceExitReq.devids)
  devids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ForceExitReq::set_devids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:im_client.ForceExitReq.devids)
  devids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ForceExitReq::set_devids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  devids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:im_client.ForceExitReq.devids)
}
inline void ForceExitReq::set_devids(int index, const char* value, size_t size) {
  devids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:im_client.ForceExitReq.devids)
}
inline ::std::string* ForceExitReq::add_devids() {
  // @@protoc_insertion_point(field_add_mutable:im_client.ForceExitReq.devids)
  return devids_.Add();
}
inline void ForceExitReq::add_devids(const ::std::string& value) {
  devids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:im_client.ForceExitReq.devids)
}
#if LANG_CXX11
inline void ForceExitReq::add_devids(::std::string&& value) {
  devids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:im_client.ForceExitReq.devids)
}
#endif
inline void ForceExitReq::add_devids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  devids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:im_client.ForceExitReq.devids)
}
inline void ForceExitReq::add_devids(const char* value, size_t size) {
  devids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:im_client.ForceExitReq.devids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ForceExitReq::devids() const {
  // @@protoc_insertion_point(field_list:im_client.ForceExitReq.devids)
  return devids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ForceExitReq::mutable_devids() {
  // @@protoc_insertion_point(field_mutable_list:im_client.ForceExitReq.devids)
  return &devids_;
}

// -------------------------------------------------------------------

// ForceExitResp

// int32 code = 1;
inline void ForceExitResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 ForceExitResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.ForceExitResp.code)
  return code_;
}
inline void ForceExitResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.ForceExitResp.code)
}

// string codeMsg = 2;
inline void ForceExitResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForceExitResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.ForceExitResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void ForceExitResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.ForceExitResp.codeMsg)
}
#if LANG_CXX11
inline void ForceExitResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.ForceExitResp.codeMsg)
}
#endif
inline void ForceExitResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.ForceExitResp.codeMsg)
}
inline void ForceExitResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.ForceExitResp.codeMsg)
}
inline ::std::string* ForceExitResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.ForceExitResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForceExitResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.ForceExitResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForceExitResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.ForceExitResp.codeMsg)
}

// -------------------------------------------------------------------

// Msg

// string content = 1;
inline void Msg::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Msg::content() const {
  // @@protoc_insertion_point(field_get:im_client.Msg.content)
  return content_.GetNoArena();
}
inline void Msg::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.Msg.content)
}
#if LANG_CXX11
inline void Msg::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.Msg.content)
}
#endif
inline void Msg::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.Msg.content)
}
inline void Msg::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.Msg.content)
}
inline ::std::string* Msg::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:im_client.Msg.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Msg::release_content() {
  // @@protoc_insertion_point(field_release:im_client.Msg.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Msg::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:im_client.Msg.content)
}

// bytes crypto_body = 2;
inline void Msg::clear_crypto_body() {
  crypto_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Msg::crypto_body() const {
  // @@protoc_insertion_point(field_get:im_client.Msg.crypto_body)
  return crypto_body_.GetNoArena();
}
inline void Msg::set_crypto_body(const ::std::string& value) {
  
  crypto_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.Msg.crypto_body)
}
#if LANG_CXX11
inline void Msg::set_crypto_body(::std::string&& value) {
  
  crypto_body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.Msg.crypto_body)
}
#endif
inline void Msg::set_crypto_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  crypto_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.Msg.crypto_body)
}
inline void Msg::set_crypto_body(const void* value, size_t size) {
  
  crypto_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.Msg.crypto_body)
}
inline ::std::string* Msg::mutable_crypto_body() {
  
  // @@protoc_insertion_point(field_mutable:im_client.Msg.crypto_body)
  return crypto_body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Msg::release_crypto_body() {
  // @@protoc_insertion_point(field_release:im_client.Msg.crypto_body)
  
  return crypto_body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Msg::set_allocated_crypto_body(::std::string* crypto_body) {
  if (crypto_body != NULL) {
    
  } else {
    
  }
  crypto_body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), crypto_body);
  // @@protoc_insertion_point(field_set_allocated:im_client.Msg.crypto_body)
}

// -------------------------------------------------------------------

// SendMsgReq

// int64 fromId = 1;
inline void SendMsgReq::clear_fromid() {
  fromid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgReq::fromid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.fromId)
  return fromid_;
}
inline void SendMsgReq::set_fromid(::google::protobuf::int64 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.fromId)
}

// string fromNickName = 2;
inline void SendMsgReq::clear_fromnickname() {
  fromnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMsgReq::fromnickname() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.fromNickName)
  return fromnickname_.GetNoArena();
}
inline void SendMsgReq::set_fromnickname(const ::std::string& value) {
  
  fromnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.fromNickName)
}
#if LANG_CXX11
inline void SendMsgReq::set_fromnickname(::std::string&& value) {
  
  fromnickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendMsgReq.fromNickName)
}
#endif
inline void SendMsgReq::set_fromnickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fromnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendMsgReq.fromNickName)
}
inline void SendMsgReq::set_fromnickname(const char* value, size_t size) {
  
  fromnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendMsgReq.fromNickName)
}
inline ::std::string* SendMsgReq::mutable_fromnickname() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendMsgReq.fromNickName)
  return fromnickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_fromnickname() {
  // @@protoc_insertion_point(field_release:im_client.SendMsgReq.fromNickName)
  
  return fromnickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_fromnickname(::std::string* fromnickname) {
  if (fromnickname != NULL) {
    
  } else {
    
  }
  fromnickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromnickname);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendMsgReq.fromNickName)
}

// string fromHeadImg = 3;
inline void SendMsgReq::clear_fromheadimg() {
  fromheadimg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMsgReq::fromheadimg() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.fromHeadImg)
  return fromheadimg_.GetNoArena();
}
inline void SendMsgReq::set_fromheadimg(const ::std::string& value) {
  
  fromheadimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.fromHeadImg)
}
#if LANG_CXX11
inline void SendMsgReq::set_fromheadimg(::std::string&& value) {
  
  fromheadimg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendMsgReq.fromHeadImg)
}
#endif
inline void SendMsgReq::set_fromheadimg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fromheadimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendMsgReq.fromHeadImg)
}
inline void SendMsgReq::set_fromheadimg(const char* value, size_t size) {
  
  fromheadimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendMsgReq.fromHeadImg)
}
inline ::std::string* SendMsgReq::mutable_fromheadimg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendMsgReq.fromHeadImg)
  return fromheadimg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_fromheadimg() {
  // @@protoc_insertion_point(field_release:im_client.SendMsgReq.fromHeadImg)
  
  return fromheadimg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_fromheadimg(::std::string* fromheadimg) {
  if (fromheadimg != NULL) {
    
  } else {
    
  }
  fromheadimg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromheadimg);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendMsgReq.fromHeadImg)
}

// int64 dstId = 4;
inline void SendMsgReq::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgReq::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.dstId)
  return dstid_;
}
inline void SendMsgReq::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.dstId)
}

// int32 dstType = 5;
inline void SendMsgReq::clear_dsttype() {
  dsttype_ = 0;
}
inline ::google::protobuf::int32 SendMsgReq::dsttype() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.dstType)
  return dsttype_;
}
inline void SendMsgReq::set_dsttype(::google::protobuf::int32 value) {
  
  dsttype_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.dstType)
}

// int64 msgId = 6;
inline void SendMsgReq::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgReq::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.msgId)
  return msgid_;
}
inline void SendMsgReq::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.msgId)
}

// int64 sendTime = 7;
inline void SendMsgReq::clear_sendtime() {
  sendtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgReq::sendtime() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.sendTime)
  return sendtime_;
}
inline void SendMsgReq::set_sendtime(::google::protobuf::int64 value) {
  
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.sendTime)
}

// int32 isTransmit = 8;
inline void SendMsgReq::clear_istransmit() {
  istransmit_ = 0;
}
inline ::google::protobuf::int32 SendMsgReq::istransmit() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.isTransmit)
  return istransmit_;
}
inline void SendMsgReq::set_istransmit(::google::protobuf::int32 value) {
  
  istransmit_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.isTransmit)
}

// int32 msgType = 9;
inline void SendMsgReq::clear_msgtype() {
  msgtype_ = 0;
}
inline ::google::protobuf::int32 SendMsgReq::msgtype() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.msgType)
  return msgtype_;
}
inline void SendMsgReq::set_msgtype(::google::protobuf::int32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.msgType)
}

// .im_client.Msg msg = 10;
inline bool SendMsgReq::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void SendMsgReq::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
}
inline const ::im_client::Msg& SendMsgReq::_internal_msg() const {
  return *msg_;
}
inline const ::im_client::Msg& SendMsgReq::msg() const {
  const ::im_client::Msg* p = msg_;
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::im_client::Msg*>(
      &::im_client::_Msg_default_instance_);
}
inline ::im_client::Msg* SendMsgReq::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.SendMsgReq.msg)
  
  ::im_client::Msg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline ::im_client::Msg* SendMsgReq::mutable_msg() {
  
  if (msg_ == NULL) {
    auto* p = CreateMaybeMessage<::im_client::Msg>(GetArenaNoVirtual());
    msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:im_client.SendMsgReq.msg)
  return msg_;
}
inline void SendMsgReq::set_allocated_msg(::im_client::Msg* msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_;
  }
  if (msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    
  } else {
    
  }
  msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:im_client.SendMsgReq.msg)
}

// int64 clientMsgId = 11;
inline void SendMsgReq::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgReq::clientmsgid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.clientMsgId)
  return clientmsgid_;
}
inline void SendMsgReq::set_clientmsgid(::google::protobuf::int64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.clientMsgId)
}

// int32 createSession = 12;
inline void SendMsgReq::clear_createsession() {
  createsession_ = 0;
}
inline ::google::protobuf::int32 SendMsgReq::createsession() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.createSession)
  return createsession_;
}
inline void SendMsgReq::set_createsession(::google::protobuf::int32 value) {
  
  createsession_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.createSession)
}

// int32 nodeStartTime = 13;
inline void SendMsgReq::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 SendMsgReq::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.nodeStartTime)
  return nodestarttime_;
}
inline void SendMsgReq::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.nodeStartTime)
}

// string nodeId = 14;
inline void SendMsgReq::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMsgReq::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.nodeId)
  return nodeid_.GetNoArena();
}
inline void SendMsgReq::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.nodeId)
}
#if LANG_CXX11
inline void SendMsgReq::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendMsgReq.nodeId)
}
#endif
inline void SendMsgReq::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendMsgReq.nodeId)
}
inline void SendMsgReq::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendMsgReq.nodeId)
}
inline ::std::string* SendMsgReq::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendMsgReq.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.SendMsgReq.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendMsgReq.nodeId)
}

// int32 msgSeq = 15;
inline void SendMsgReq::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 SendMsgReq::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.msgSeq)
  return msgseq_;
}
inline void SendMsgReq::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.msgSeq)
}

// int32 isTrySend = 16;
inline void SendMsgReq::clear_istrysend() {
  istrysend_ = 0;
}
inline ::google::protobuf::int32 SendMsgReq::istrysend() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.isTrySend)
  return istrysend_;
}
inline void SendMsgReq::set_istrysend(::google::protobuf::int32 value) {
  
  istrysend_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.isTrySend)
}

// repeated int64 notifyUserId = 17;
inline int SendMsgReq::notifyuserid_size() const {
  return notifyuserid_.size();
}
inline void SendMsgReq::clear_notifyuserid() {
  notifyuserid_.Clear();
}
inline ::google::protobuf::int64 SendMsgReq::notifyuserid(int index) const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.notifyUserId)
  return notifyuserid_.Get(index);
}
inline void SendMsgReq::set_notifyuserid(int index, ::google::protobuf::int64 value) {
  notifyuserid_.Set(index, value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.notifyUserId)
}
inline void SendMsgReq::add_notifyuserid(::google::protobuf::int64 value) {
  notifyuserid_.Add(value);
  // @@protoc_insertion_point(field_add:im_client.SendMsgReq.notifyUserId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SendMsgReq::notifyuserid() const {
  // @@protoc_insertion_point(field_list:im_client.SendMsgReq.notifyUserId)
  return notifyuserid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SendMsgReq::mutable_notifyuserid() {
  // @@protoc_insertion_point(field_mutable_list:im_client.SendMsgReq.notifyUserId)
  return &notifyuserid_;
}

// int64 notifyMsgId = 18;
inline void SendMsgReq::clear_notifymsgid() {
  notifymsgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgReq::notifymsgid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.notifyMsgId)
  return notifymsgid_;
}
inline void SendMsgReq::set_notifymsgid(::google::protobuf::int64 value) {
  
  notifymsgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.notifyMsgId)
}

// int64 keyVersion = 19;
inline void SendMsgReq::clear_keyversion() {
  keyversion_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgReq::keyversion() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgReq.keyVersion)
  return keyversion_;
}
inline void SendMsgReq::set_keyversion(::google::protobuf::int64 value) {
  
  keyversion_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgReq.keyVersion)
}

// -------------------------------------------------------------------

// SendMsgResp

// int32 code = 1;
inline void SendMsgResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 SendMsgResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgResp.code)
  return code_;
}
inline void SendMsgResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgResp.code)
}

// string codeMsg = 2;
inline void SendMsgResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMsgResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void SendMsgResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgResp.codeMsg)
}
#if LANG_CXX11
inline void SendMsgResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendMsgResp.codeMsg)
}
#endif
inline void SendMsgResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendMsgResp.codeMsg)
}
inline void SendMsgResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendMsgResp.codeMsg)
}
inline ::std::string* SendMsgResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendMsgResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.SendMsgResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendMsgResp.codeMsg)
}

// int64 msgId = 3;
inline void SendMsgResp::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgResp::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgResp.msgId)
  return msgid_;
}
inline void SendMsgResp::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgResp.msgId)
}

// int64 serverTime = 4;
inline void SendMsgResp::clear_servertime() {
  servertime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgResp::servertime() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgResp.serverTime)
  return servertime_;
}
inline void SendMsgResp::set_servertime(::google::protobuf::int64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgResp.serverTime)
}

// int64 clientMsgId = 5;
inline void SendMsgResp::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgResp::clientmsgid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgResp.clientMsgId)
  return clientmsgid_;
}
inline void SendMsgResp::set_clientmsgid(::google::protobuf::int64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgResp.clientMsgId)
}

// int32 nodeStartTime = 6;
inline void SendMsgResp::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 SendMsgResp::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgResp.nodeStartTime)
  return nodestarttime_;
}
inline void SendMsgResp::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgResp.nodeStartTime)
}

// string nodeId = 7;
inline void SendMsgResp::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMsgResp::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgResp.nodeId)
  return nodeid_.GetNoArena();
}
inline void SendMsgResp::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgResp.nodeId)
}
#if LANG_CXX11
inline void SendMsgResp::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendMsgResp.nodeId)
}
#endif
inline void SendMsgResp::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendMsgResp.nodeId)
}
inline void SendMsgResp::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendMsgResp.nodeId)
}
inline ::std::string* SendMsgResp::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendMsgResp.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgResp::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.SendMsgResp.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgResp::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendMsgResp.nodeId)
}

// int32 msgSeq = 8;
inline void SendMsgResp::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 SendMsgResp::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgResp.msgSeq)
  return msgseq_;
}
inline void SendMsgResp::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgResp.msgSeq)
}

// int32 keyUpdated = 9;
inline void SendMsgResp::clear_keyupdated() {
  keyupdated_ = 0;
}
inline ::google::protobuf::int32 SendMsgResp::keyupdated() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgResp.keyUpdated)
  return keyupdated_;
}
inline void SendMsgResp::set_keyupdated(::google::protobuf::int32 value) {
  
  keyupdated_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgResp.keyUpdated)
}

// -------------------------------------------------------------------

// RecvMsgResp

// int32 code = 1;
inline void RecvMsgResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 RecvMsgResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgResp.code)
  return code_;
}
inline void RecvMsgResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.RecvMsgResp.code)
}

// string codeMsg = 2;
inline void RecvMsgResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecvMsgResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void RecvMsgResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.RecvMsgResp.codeMsg)
}
#if LANG_CXX11
inline void RecvMsgResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.RecvMsgResp.codeMsg)
}
#endif
inline void RecvMsgResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.RecvMsgResp.codeMsg)
}
inline void RecvMsgResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.RecvMsgResp.codeMsg)
}
inline ::std::string* RecvMsgResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.RecvMsgResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecvMsgResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.RecvMsgResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvMsgResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.RecvMsgResp.codeMsg)
}

// int64 msgId = 3;
inline void RecvMsgResp::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RecvMsgResp::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgResp.msgId)
  return msgid_;
}
inline void RecvMsgResp::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.RecvMsgResp.msgId)
}

// int32 nodeStartTime = 4;
inline void RecvMsgResp::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 RecvMsgResp::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgResp.nodeStartTime)
  return nodestarttime_;
}
inline void RecvMsgResp::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.RecvMsgResp.nodeStartTime)
}

// string nodeId = 5;
inline void RecvMsgResp::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecvMsgResp::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgResp.nodeId)
  return nodeid_.GetNoArena();
}
inline void RecvMsgResp::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.RecvMsgResp.nodeId)
}
#if LANG_CXX11
inline void RecvMsgResp::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.RecvMsgResp.nodeId)
}
#endif
inline void RecvMsgResp::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.RecvMsgResp.nodeId)
}
inline void RecvMsgResp::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.RecvMsgResp.nodeId)
}
inline ::std::string* RecvMsgResp::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.RecvMsgResp.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecvMsgResp::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.RecvMsgResp.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvMsgResp::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.RecvMsgResp.nodeId)
}

// int32 msgSeq = 6;
inline void RecvMsgResp::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 RecvMsgResp::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgResp.msgSeq)
  return msgseq_;
}
inline void RecvMsgResp::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.RecvMsgResp.msgSeq)
}

// -------------------------------------------------------------------

// PushNoticeReq

// int32 fromType = 1;
inline void PushNoticeReq::clear_fromtype() {
  fromtype_ = 0;
}
inline ::google::protobuf::int32 PushNoticeReq::fromtype() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.fromType)
  return fromtype_;
}
inline void PushNoticeReq::set_fromtype(::google::protobuf::int32 value) {
  
  fromtype_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.fromType)
}

// int64 fromId = 2;
inline void PushNoticeReq::clear_fromid() {
  fromid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PushNoticeReq::fromid() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.fromId)
  return fromid_;
}
inline void PushNoticeReq::set_fromid(::google::protobuf::int64 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.fromId)
}

// string fromNickName = 3;
inline void PushNoticeReq::clear_fromnickname() {
  fromnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushNoticeReq::fromnickname() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.fromNickName)
  return fromnickname_.GetNoArena();
}
inline void PushNoticeReq::set_fromnickname(const ::std::string& value) {
  
  fromnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.fromNickName)
}
#if LANG_CXX11
inline void PushNoticeReq::set_fromnickname(::std::string&& value) {
  
  fromnickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PushNoticeReq.fromNickName)
}
#endif
inline void PushNoticeReq::set_fromnickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fromnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PushNoticeReq.fromNickName)
}
inline void PushNoticeReq::set_fromnickname(const char* value, size_t size) {
  
  fromnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PushNoticeReq.fromNickName)
}
inline ::std::string* PushNoticeReq::mutable_fromnickname() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PushNoticeReq.fromNickName)
  return fromnickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushNoticeReq::release_fromnickname() {
  // @@protoc_insertion_point(field_release:im_client.PushNoticeReq.fromNickName)
  
  return fromnickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushNoticeReq::set_allocated_fromnickname(::std::string* fromnickname) {
  if (fromnickname != NULL) {
    
  } else {
    
  }
  fromnickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromnickname);
  // @@protoc_insertion_point(field_set_allocated:im_client.PushNoticeReq.fromNickName)
}

// string fromHeadImg = 4;
inline void PushNoticeReq::clear_fromheadimg() {
  fromheadimg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushNoticeReq::fromheadimg() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.fromHeadImg)
  return fromheadimg_.GetNoArena();
}
inline void PushNoticeReq::set_fromheadimg(const ::std::string& value) {
  
  fromheadimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.fromHeadImg)
}
#if LANG_CXX11
inline void PushNoticeReq::set_fromheadimg(::std::string&& value) {
  
  fromheadimg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PushNoticeReq.fromHeadImg)
}
#endif
inline void PushNoticeReq::set_fromheadimg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fromheadimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PushNoticeReq.fromHeadImg)
}
inline void PushNoticeReq::set_fromheadimg(const char* value, size_t size) {
  
  fromheadimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PushNoticeReq.fromHeadImg)
}
inline ::std::string* PushNoticeReq::mutable_fromheadimg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PushNoticeReq.fromHeadImg)
  return fromheadimg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushNoticeReq::release_fromheadimg() {
  // @@protoc_insertion_point(field_release:im_client.PushNoticeReq.fromHeadImg)
  
  return fromheadimg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushNoticeReq::set_allocated_fromheadimg(::std::string* fromheadimg) {
  if (fromheadimg != NULL) {
    
  } else {
    
  }
  fromheadimg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromheadimg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PushNoticeReq.fromHeadImg)
}

// int64 dstId = 5;
inline void PushNoticeReq::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PushNoticeReq::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.dstId)
  return dstid_;
}
inline void PushNoticeReq::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.dstId)
}

// int64 sendTime = 6;
inline void PushNoticeReq::clear_sendtime() {
  sendtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PushNoticeReq::sendtime() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.sendTime)
  return sendtime_;
}
inline void PushNoticeReq::set_sendtime(::google::protobuf::int64 value) {
  
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.sendTime)
}

// int64 msgId = 7;
inline void PushNoticeReq::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PushNoticeReq::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.msgId)
  return msgid_;
}
inline void PushNoticeReq::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.msgId)
}

// int32 noticeType = 8;
inline void PushNoticeReq::clear_noticetype() {
  noticetype_ = 0;
}
inline ::google::protobuf::int32 PushNoticeReq::noticetype() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.noticeType)
  return noticetype_;
}
inline void PushNoticeReq::set_noticetype(::google::protobuf::int32 value) {
  
  noticetype_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.noticeType)
}

// string msg = 9;
inline void PushNoticeReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushNoticeReq::msg() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.msg)
  return msg_.GetNoArena();
}
inline void PushNoticeReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.msg)
}
#if LANG_CXX11
inline void PushNoticeReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PushNoticeReq.msg)
}
#endif
inline void PushNoticeReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PushNoticeReq.msg)
}
inline void PushNoticeReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PushNoticeReq.msg)
}
inline ::std::string* PushNoticeReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PushNoticeReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushNoticeReq::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.PushNoticeReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushNoticeReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PushNoticeReq.msg)
}

// int32 nodeStartTime = 10;
inline void PushNoticeReq::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 PushNoticeReq::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.nodeStartTime)
  return nodestarttime_;
}
inline void PushNoticeReq::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.nodeStartTime)
}

// string nodeId = 11;
inline void PushNoticeReq::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushNoticeReq::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.nodeId)
  return nodeid_.GetNoArena();
}
inline void PushNoticeReq::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.nodeId)
}
#if LANG_CXX11
inline void PushNoticeReq::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PushNoticeReq.nodeId)
}
#endif
inline void PushNoticeReq::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PushNoticeReq.nodeId)
}
inline void PushNoticeReq::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PushNoticeReq.nodeId)
}
inline ::std::string* PushNoticeReq::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PushNoticeReq.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushNoticeReq::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.PushNoticeReq.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushNoticeReq::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.PushNoticeReq.nodeId)
}

// int32 msgSeq = 12;
inline void PushNoticeReq::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 PushNoticeReq::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeReq.msgSeq)
  return msgseq_;
}
inline void PushNoticeReq::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushNoticeReq.msgSeq)
}

// -------------------------------------------------------------------

// PushNoticeResp

// int64 msgId = 1;
inline void PushNoticeResp::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PushNoticeResp::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.PushNoticeResp.msgId)
  return msgid_;
}
inline void PushNoticeResp::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushNoticeResp.msgId)
}

// -------------------------------------------------------------------

// SendMsgStateReq

// int64 fromId = 1;
inline void SendMsgStateReq::clear_fromid() {
  fromid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgStateReq::fromid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.fromId)
  return fromid_;
}
inline void SendMsgStateReq::set_fromid(::google::protobuf::int64 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.fromId)
}

// int64 dstId = 2;
inline void SendMsgStateReq::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgStateReq::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.dstId)
  return dstid_;
}
inline void SendMsgStateReq::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.dstId)
}

// int32 msgState = 3;
inline void SendMsgStateReq::clear_msgstate() {
  msgstate_ = 0;
}
inline ::google::protobuf::int32 SendMsgStateReq::msgstate() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.msgState)
  return msgstate_;
}
inline void SendMsgStateReq::set_msgstate(::google::protobuf::int32 value) {
  
  msgstate_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.msgState)
}

// int64 clientMsgId = 4;
inline void SendMsgStateReq::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgStateReq::clientmsgid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.clientMsgId)
  return clientmsgid_;
}
inline void SendMsgStateReq::set_clientmsgid(::google::protobuf::int64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.clientMsgId)
}

// int64 msgId = 5;
inline void SendMsgStateReq::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgStateReq::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.msgId)
  return msgid_;
}
inline void SendMsgStateReq::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.msgId)
}

// repeated int64 opMsgId = 6;
inline int SendMsgStateReq::opmsgid_size() const {
  return opmsgid_.size();
}
inline void SendMsgStateReq::clear_opmsgid() {
  opmsgid_.Clear();
}
inline ::google::protobuf::int64 SendMsgStateReq::opmsgid(int index) const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.opMsgId)
  return opmsgid_.Get(index);
}
inline void SendMsgStateReq::set_opmsgid(int index, ::google::protobuf::int64 value) {
  opmsgid_.Set(index, value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.opMsgId)
}
inline void SendMsgStateReq::add_opmsgid(::google::protobuf::int64 value) {
  opmsgid_.Add(value);
  // @@protoc_insertion_point(field_add:im_client.SendMsgStateReq.opMsgId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SendMsgStateReq::opmsgid() const {
  // @@protoc_insertion_point(field_list:im_client.SendMsgStateReq.opMsgId)
  return opmsgid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SendMsgStateReq::mutable_opmsgid() {
  // @@protoc_insertion_point(field_mutable_list:im_client.SendMsgStateReq.opMsgId)
  return &opmsgid_;
}

// int32 nodeStartTime = 7;
inline void SendMsgStateReq::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 SendMsgStateReq::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.nodeStartTime)
  return nodestarttime_;
}
inline void SendMsgStateReq::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.nodeStartTime)
}

// string nodeId = 8;
inline void SendMsgStateReq::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMsgStateReq::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.nodeId)
  return nodeid_.GetNoArena();
}
inline void SendMsgStateReq::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.nodeId)
}
#if LANG_CXX11
inline void SendMsgStateReq::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendMsgStateReq.nodeId)
}
#endif
inline void SendMsgStateReq::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendMsgStateReq.nodeId)
}
inline void SendMsgStateReq::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendMsgStateReq.nodeId)
}
inline ::std::string* SendMsgStateReq::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendMsgStateReq.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgStateReq::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.SendMsgStateReq.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgStateReq::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendMsgStateReq.nodeId)
}

// int32 msgSeq = 9;
inline void SendMsgStateReq::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 SendMsgStateReq::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.msgSeq)
  return msgseq_;
}
inline void SendMsgStateReq::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.msgSeq)
}

// int64 sendTime = 10;
inline void SendMsgStateReq::clear_sendtime() {
  sendtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgStateReq::sendtime() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateReq.sendTime)
  return sendtime_;
}
inline void SendMsgStateReq::set_sendtime(::google::protobuf::int64 value) {
  
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateReq.sendTime)
}

// -------------------------------------------------------------------

// SendMsgStateResp

// int32 code = 1;
inline void SendMsgStateResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 SendMsgStateResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateResp.code)
  return code_;
}
inline void SendMsgStateResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateResp.code)
}

// string codeMsg = 2;
inline void SendMsgStateResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMsgStateResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void SendMsgStateResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateResp.codeMsg)
}
#if LANG_CXX11
inline void SendMsgStateResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendMsgStateResp.codeMsg)
}
#endif
inline void SendMsgStateResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendMsgStateResp.codeMsg)
}
inline void SendMsgStateResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendMsgStateResp.codeMsg)
}
inline ::std::string* SendMsgStateResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendMsgStateResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgStateResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.SendMsgStateResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgStateResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendMsgStateResp.codeMsg)
}

// int64 clientMsgId = 3;
inline void SendMsgStateResp::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgStateResp::clientmsgid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateResp.clientMsgId)
  return clientmsgid_;
}
inline void SendMsgStateResp::set_clientmsgid(::google::protobuf::int64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateResp.clientMsgId)
}

// int64 msgId = 4;
inline void SendMsgStateResp::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgStateResp::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateResp.msgId)
  return msgid_;
}
inline void SendMsgStateResp::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateResp.msgId)
}

// repeated int64 opMsgId = 5;
inline int SendMsgStateResp::opmsgid_size() const {
  return opmsgid_.size();
}
inline void SendMsgStateResp::clear_opmsgid() {
  opmsgid_.Clear();
}
inline ::google::protobuf::int64 SendMsgStateResp::opmsgid(int index) const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateResp.opMsgId)
  return opmsgid_.Get(index);
}
inline void SendMsgStateResp::set_opmsgid(int index, ::google::protobuf::int64 value) {
  opmsgid_.Set(index, value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateResp.opMsgId)
}
inline void SendMsgStateResp::add_opmsgid(::google::protobuf::int64 value) {
  opmsgid_.Add(value);
  // @@protoc_insertion_point(field_add:im_client.SendMsgStateResp.opMsgId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SendMsgStateResp::opmsgid() const {
  // @@protoc_insertion_point(field_list:im_client.SendMsgStateResp.opMsgId)
  return opmsgid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SendMsgStateResp::mutable_opmsgid() {
  // @@protoc_insertion_point(field_mutable_list:im_client.SendMsgStateResp.opMsgId)
  return &opmsgid_;
}

// int32 nodeStartTime = 6;
inline void SendMsgStateResp::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 SendMsgStateResp::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateResp.nodeStartTime)
  return nodestarttime_;
}
inline void SendMsgStateResp::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateResp.nodeStartTime)
}

// string nodeId = 7;
inline void SendMsgStateResp::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMsgStateResp::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateResp.nodeId)
  return nodeid_.GetNoArena();
}
inline void SendMsgStateResp::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateResp.nodeId)
}
#if LANG_CXX11
inline void SendMsgStateResp::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendMsgStateResp.nodeId)
}
#endif
inline void SendMsgStateResp::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendMsgStateResp.nodeId)
}
inline void SendMsgStateResp::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendMsgStateResp.nodeId)
}
inline ::std::string* SendMsgStateResp::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendMsgStateResp.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgStateResp::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.SendMsgStateResp.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgStateResp::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendMsgStateResp.nodeId)
}

// int32 msgSeq = 8;
inline void SendMsgStateResp::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 SendMsgStateResp::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateResp.msgSeq)
  return msgseq_;
}
inline void SendMsgStateResp::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateResp.msgSeq)
}

// int64 serverTime = 9;
inline void SendMsgStateResp::clear_servertime() {
  servertime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendMsgStateResp::servertime() const {
  // @@protoc_insertion_point(field_get:im_client.SendMsgStateResp.serverTime)
  return servertime_;
}
inline void SendMsgStateResp::set_servertime(::google::protobuf::int64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendMsgStateResp.serverTime)
}

// -------------------------------------------------------------------

// RecvMsgStateResp

// int64 msgId = 1;
inline void RecvMsgStateResp::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RecvMsgStateResp::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgStateResp.msgId)
  return msgid_;
}
inline void RecvMsgStateResp::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.RecvMsgStateResp.msgId)
}

// int32 nodeStartTime = 2;
inline void RecvMsgStateResp::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 RecvMsgStateResp::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgStateResp.nodeStartTime)
  return nodestarttime_;
}
inline void RecvMsgStateResp::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.RecvMsgStateResp.nodeStartTime)
}

// string nodeId = 3;
inline void RecvMsgStateResp::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecvMsgStateResp::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgStateResp.nodeId)
  return nodeid_.GetNoArena();
}
inline void RecvMsgStateResp::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.RecvMsgStateResp.nodeId)
}
#if LANG_CXX11
inline void RecvMsgStateResp::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.RecvMsgStateResp.nodeId)
}
#endif
inline void RecvMsgStateResp::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.RecvMsgStateResp.nodeId)
}
inline void RecvMsgStateResp::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.RecvMsgStateResp.nodeId)
}
inline ::std::string* RecvMsgStateResp::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.RecvMsgStateResp.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecvMsgStateResp::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.RecvMsgStateResp.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvMsgStateResp::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.RecvMsgStateResp.nodeId)
}

// int32 msgSeq = 4;
inline void RecvMsgStateResp::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 RecvMsgStateResp::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.RecvMsgStateResp.msgSeq)
  return msgseq_;
}
inline void RecvMsgStateResp::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.RecvMsgStateResp.msgSeq)
}

// -------------------------------------------------------------------

// PullUserOnlineInfoReq

// int64 fromId = 1;
inline void PullUserOnlineInfoReq::clear_fromid() {
  fromid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PullUserOnlineInfoReq::fromid() const {
  // @@protoc_insertion_point(field_get:im_client.PullUserOnlineInfoReq.fromId)
  return fromid_;
}
inline void PullUserOnlineInfoReq::set_fromid(::google::protobuf::int64 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PullUserOnlineInfoReq.fromId)
}

// repeated int64 userIds = 2;
inline int PullUserOnlineInfoReq::userids_size() const {
  return userids_.size();
}
inline void PullUserOnlineInfoReq::clear_userids() {
  userids_.Clear();
}
inline ::google::protobuf::int64 PullUserOnlineInfoReq::userids(int index) const {
  // @@protoc_insertion_point(field_get:im_client.PullUserOnlineInfoReq.userIds)
  return userids_.Get(index);
}
inline void PullUserOnlineInfoReq::set_userids(int index, ::google::protobuf::int64 value) {
  userids_.Set(index, value);
  // @@protoc_insertion_point(field_set:im_client.PullUserOnlineInfoReq.userIds)
}
inline void PullUserOnlineInfoReq::add_userids(::google::protobuf::int64 value) {
  userids_.Add(value);
  // @@protoc_insertion_point(field_add:im_client.PullUserOnlineInfoReq.userIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PullUserOnlineInfoReq::userids() const {
  // @@protoc_insertion_point(field_list:im_client.PullUserOnlineInfoReq.userIds)
  return userids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PullUserOnlineInfoReq::mutable_userids() {
  // @@protoc_insertion_point(field_mutable_list:im_client.PullUserOnlineInfoReq.userIds)
  return &userids_;
}

// -------------------------------------------------------------------

// PullUserOnlineInfoResp

// int32 code = 1;
inline void PullUserOnlineInfoResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 PullUserOnlineInfoResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.PullUserOnlineInfoResp.code)
  return code_;
}
inline void PullUserOnlineInfoResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.PullUserOnlineInfoResp.code)
}

// string codeMsg = 2;
inline void PullUserOnlineInfoResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PullUserOnlineInfoResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.PullUserOnlineInfoResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void PullUserOnlineInfoResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PullUserOnlineInfoResp.codeMsg)
}
#if LANG_CXX11
inline void PullUserOnlineInfoResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PullUserOnlineInfoResp.codeMsg)
}
#endif
inline void PullUserOnlineInfoResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PullUserOnlineInfoResp.codeMsg)
}
inline void PullUserOnlineInfoResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PullUserOnlineInfoResp.codeMsg)
}
inline ::std::string* PullUserOnlineInfoResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PullUserOnlineInfoResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PullUserOnlineInfoResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.PullUserOnlineInfoResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PullUserOnlineInfoResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PullUserOnlineInfoResp.codeMsg)
}

// int64 dstId = 3;
inline void PullUserOnlineInfoResp::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PullUserOnlineInfoResp::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.PullUserOnlineInfoResp.dstId)
  return dstid_;
}
inline void PullUserOnlineInfoResp::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PullUserOnlineInfoResp.dstId)
}

// int32 dstType = 4;
inline void PullUserOnlineInfoResp::clear_dsttype() {
  dsttype_ = 0;
}
inline ::google::protobuf::int32 PullUserOnlineInfoResp::dsttype() const {
  // @@protoc_insertion_point(field_get:im_client.PullUserOnlineInfoResp.dstType)
  return dsttype_;
}
inline void PullUserOnlineInfoResp::set_dsttype(::google::protobuf::int32 value) {
  
  dsttype_ = value;
  // @@protoc_insertion_point(field_set:im_client.PullUserOnlineInfoResp.dstType)
}

// string msg = 5;
inline void PullUserOnlineInfoResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PullUserOnlineInfoResp::msg() const {
  // @@protoc_insertion_point(field_get:im_client.PullUserOnlineInfoResp.msg)
  return msg_.GetNoArena();
}
inline void PullUserOnlineInfoResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PullUserOnlineInfoResp.msg)
}
#if LANG_CXX11
inline void PullUserOnlineInfoResp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PullUserOnlineInfoResp.msg)
}
#endif
inline void PullUserOnlineInfoResp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PullUserOnlineInfoResp.msg)
}
inline void PullUserOnlineInfoResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PullUserOnlineInfoResp.msg)
}
inline ::std::string* PullUserOnlineInfoResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PullUserOnlineInfoResp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PullUserOnlineInfoResp::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.PullUserOnlineInfoResp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PullUserOnlineInfoResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PullUserOnlineInfoResp.msg)
}

// -------------------------------------------------------------------

// reportNoReadMsgSumReq

// int64 userId = 1;
inline void reportNoReadMsgSumReq::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 reportNoReadMsgSumReq::userid() const {
  // @@protoc_insertion_point(field_get:im_client.reportNoReadMsgSumReq.userId)
  return userid_;
}
inline void reportNoReadMsgSumReq::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:im_client.reportNoReadMsgSumReq.userId)
}

// int32 noReadSum = 2;
inline void reportNoReadMsgSumReq::clear_noreadsum() {
  noreadsum_ = 0;
}
inline ::google::protobuf::int32 reportNoReadMsgSumReq::noreadsum() const {
  // @@protoc_insertion_point(field_get:im_client.reportNoReadMsgSumReq.noReadSum)
  return noreadsum_;
}
inline void reportNoReadMsgSumReq::set_noreadsum(::google::protobuf::int32 value) {
  
  noreadsum_ = value;
  // @@protoc_insertion_point(field_set:im_client.reportNoReadMsgSumReq.noReadSum)
}

// -------------------------------------------------------------------

// reportNoReadMsgSumResp

// int32 code = 1;
inline void reportNoReadMsgSumResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 reportNoReadMsgSumResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.reportNoReadMsgSumResp.code)
  return code_;
}
inline void reportNoReadMsgSumResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.reportNoReadMsgSumResp.code)
}

// string codeMsg = 2;
inline void reportNoReadMsgSumResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& reportNoReadMsgSumResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.reportNoReadMsgSumResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void reportNoReadMsgSumResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.reportNoReadMsgSumResp.codeMsg)
}
#if LANG_CXX11
inline void reportNoReadMsgSumResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.reportNoReadMsgSumResp.codeMsg)
}
#endif
inline void reportNoReadMsgSumResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.reportNoReadMsgSumResp.codeMsg)
}
inline void reportNoReadMsgSumResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.reportNoReadMsgSumResp.codeMsg)
}
inline ::std::string* reportNoReadMsgSumResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.reportNoReadMsgSumResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* reportNoReadMsgSumResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.reportNoReadMsgSumResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void reportNoReadMsgSumResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.reportNoReadMsgSumResp.codeMsg)
}

// -------------------------------------------------------------------

// sendInputStateReq

// int64 fromId = 1;
inline void sendInputStateReq::clear_fromid() {
  fromid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 sendInputStateReq::fromid() const {
  // @@protoc_insertion_point(field_get:im_client.sendInputStateReq.fromId)
  return fromid_;
}
inline void sendInputStateReq::set_fromid(::google::protobuf::int64 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:im_client.sendInputStateReq.fromId)
}

// int32 dstType = 2;
inline void sendInputStateReq::clear_dsttype() {
  dsttype_ = 0;
}
inline ::google::protobuf::int32 sendInputStateReq::dsttype() const {
  // @@protoc_insertion_point(field_get:im_client.sendInputStateReq.dstType)
  return dsttype_;
}
inline void sendInputStateReq::set_dsttype(::google::protobuf::int32 value) {
  
  dsttype_ = value;
  // @@protoc_insertion_point(field_set:im_client.sendInputStateReq.dstType)
}

// int64 dstId = 3;
inline void sendInputStateReq::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 sendInputStateReq::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.sendInputStateReq.dstId)
  return dstid_;
}
inline void sendInputStateReq::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.sendInputStateReq.dstId)
}

// int32 state = 4;
inline void sendInputStateReq::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 sendInputStateReq::state() const {
  // @@protoc_insertion_point(field_get:im_client.sendInputStateReq.state)
  return state_;
}
inline void sendInputStateReq::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:im_client.sendInputStateReq.state)
}

// string msg = 5;
inline void sendInputStateReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& sendInputStateReq::msg() const {
  // @@protoc_insertion_point(field_get:im_client.sendInputStateReq.msg)
  return msg_.GetNoArena();
}
inline void sendInputStateReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.sendInputStateReq.msg)
}
#if LANG_CXX11
inline void sendInputStateReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.sendInputStateReq.msg)
}
#endif
inline void sendInputStateReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.sendInputStateReq.msg)
}
inline void sendInputStateReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.sendInputStateReq.msg)
}
inline ::std::string* sendInputStateReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.sendInputStateReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sendInputStateReq::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.sendInputStateReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sendInputStateReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:im_client.sendInputStateReq.msg)
}

// -------------------------------------------------------------------

// sendInputStateResp

// int32 code = 1;
inline void sendInputStateResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 sendInputStateResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.sendInputStateResp.code)
  return code_;
}
inline void sendInputStateResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.sendInputStateResp.code)
}

// string codeMsg = 2;
inline void sendInputStateResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& sendInputStateResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.sendInputStateResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void sendInputStateResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.sendInputStateResp.codeMsg)
}
#if LANG_CXX11
inline void sendInputStateResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.sendInputStateResp.codeMsg)
}
#endif
inline void sendInputStateResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.sendInputStateResp.codeMsg)
}
inline void sendInputStateResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.sendInputStateResp.codeMsg)
}
inline ::std::string* sendInputStateResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.sendInputStateResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sendInputStateResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.sendInputStateResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sendInputStateResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.sendInputStateResp.codeMsg)
}

// -------------------------------------------------------------------

// recvInputStateReq

// int64 fromId = 1;
inline void recvInputStateReq::clear_fromid() {
  fromid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 recvInputStateReq::fromid() const {
  // @@protoc_insertion_point(field_get:im_client.recvInputStateReq.fromId)
  return fromid_;
}
inline void recvInputStateReq::set_fromid(::google::protobuf::int64 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:im_client.recvInputStateReq.fromId)
}

// int32 dstType = 2;
inline void recvInputStateReq::clear_dsttype() {
  dsttype_ = 0;
}
inline ::google::protobuf::int32 recvInputStateReq::dsttype() const {
  // @@protoc_insertion_point(field_get:im_client.recvInputStateReq.dstType)
  return dsttype_;
}
inline void recvInputStateReq::set_dsttype(::google::protobuf::int32 value) {
  
  dsttype_ = value;
  // @@protoc_insertion_point(field_set:im_client.recvInputStateReq.dstType)
}

// int64 dstId = 3;
inline void recvInputStateReq::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 recvInputStateReq::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.recvInputStateReq.dstId)
  return dstid_;
}
inline void recvInputStateReq::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.recvInputStateReq.dstId)
}

// int32 state = 4;
inline void recvInputStateReq::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 recvInputStateReq::state() const {
  // @@protoc_insertion_point(field_get:im_client.recvInputStateReq.state)
  return state_;
}
inline void recvInputStateReq::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:im_client.recvInputStateReq.state)
}

// string msg = 5;
inline void recvInputStateReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& recvInputStateReq::msg() const {
  // @@protoc_insertion_point(field_get:im_client.recvInputStateReq.msg)
  return msg_.GetNoArena();
}
inline void recvInputStateReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.recvInputStateReq.msg)
}
#if LANG_CXX11
inline void recvInputStateReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.recvInputStateReq.msg)
}
#endif
inline void recvInputStateReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.recvInputStateReq.msg)
}
inline void recvInputStateReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.recvInputStateReq.msg)
}
inline ::std::string* recvInputStateReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.recvInputStateReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* recvInputStateReq::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.recvInputStateReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void recvInputStateReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:im_client.recvInputStateReq.msg)
}

// -------------------------------------------------------------------

// recvInputStateResp

// int32 code = 1;
inline void recvInputStateResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 recvInputStateResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.recvInputStateResp.code)
  return code_;
}
inline void recvInputStateResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.recvInputStateResp.code)
}

// string codeMsg = 2;
inline void recvInputStateResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& recvInputStateResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.recvInputStateResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void recvInputStateResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.recvInputStateResp.codeMsg)
}
#if LANG_CXX11
inline void recvInputStateResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.recvInputStateResp.codeMsg)
}
#endif
inline void recvInputStateResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.recvInputStateResp.codeMsg)
}
inline void recvInputStateResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.recvInputStateResp.codeMsg)
}
inline ::std::string* recvInputStateResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.recvInputStateResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* recvInputStateResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.recvInputStateResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void recvInputStateResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.recvInputStateResp.codeMsg)
}

// -------------------------------------------------------------------

// MsgStatus

// int32 msgState = 1;
inline void MsgStatus::clear_msgstate() {
  msgstate_ = 0;
}
inline ::google::protobuf::int32 MsgStatus::msgstate() const {
  // @@protoc_insertion_point(field_get:im_client.MsgStatus.msgState)
  return msgstate_;
}
inline void MsgStatus::set_msgstate(::google::protobuf::int32 value) {
  
  msgstate_ = value;
  // @@protoc_insertion_point(field_set:im_client.MsgStatus.msgState)
}

// int64 msgId = 2;
inline void MsgStatus::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MsgStatus::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.MsgStatus.msgId)
  return msgid_;
}
inline void MsgStatus::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.MsgStatus.msgId)
}

// -------------------------------------------------------------------

// BatchSendMsgStateReq

// int64 fromId = 1;
inline void BatchSendMsgStateReq::clear_fromid() {
  fromid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BatchSendMsgStateReq::fromid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateReq.fromId)
  return fromid_;
}
inline void BatchSendMsgStateReq::set_fromid(::google::protobuf::int64 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateReq.fromId)
}

// int64 dstId = 2;
inline void BatchSendMsgStateReq::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BatchSendMsgStateReq::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateReq.dstId)
  return dstid_;
}
inline void BatchSendMsgStateReq::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateReq.dstId)
}

// int64 clientMsgId = 3;
inline void BatchSendMsgStateReq::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BatchSendMsgStateReq::clientmsgid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateReq.clientMsgId)
  return clientmsgid_;
}
inline void BatchSendMsgStateReq::set_clientmsgid(::google::protobuf::int64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateReq.clientMsgId)
}

// int64 msgId = 4;
inline void BatchSendMsgStateReq::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BatchSendMsgStateReq::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateReq.msgId)
  return msgid_;
}
inline void BatchSendMsgStateReq::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateReq.msgId)
}

// repeated .im_client.MsgStatus opMsgId = 5;
inline int BatchSendMsgStateReq::opmsgid_size() const {
  return opmsgid_.size();
}
inline void BatchSendMsgStateReq::clear_opmsgid() {
  opmsgid_.Clear();
}
inline ::im_client::MsgStatus* BatchSendMsgStateReq::mutable_opmsgid(int index) {
  // @@protoc_insertion_point(field_mutable:im_client.BatchSendMsgStateReq.opMsgId)
  return opmsgid_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus >*
BatchSendMsgStateReq::mutable_opmsgid() {
  // @@protoc_insertion_point(field_mutable_list:im_client.BatchSendMsgStateReq.opMsgId)
  return &opmsgid_;
}
inline const ::im_client::MsgStatus& BatchSendMsgStateReq::opmsgid(int index) const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateReq.opMsgId)
  return opmsgid_.Get(index);
}
inline ::im_client::MsgStatus* BatchSendMsgStateReq::add_opmsgid() {
  // @@protoc_insertion_point(field_add:im_client.BatchSendMsgStateReq.opMsgId)
  return opmsgid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus >&
BatchSendMsgStateReq::opmsgid() const {
  // @@protoc_insertion_point(field_list:im_client.BatchSendMsgStateReq.opMsgId)
  return opmsgid_;
}

// int32 nodeStartTime = 6;
inline void BatchSendMsgStateReq::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 BatchSendMsgStateReq::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateReq.nodeStartTime)
  return nodestarttime_;
}
inline void BatchSendMsgStateReq::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateReq.nodeStartTime)
}

// string nodeId = 7;
inline void BatchSendMsgStateReq::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BatchSendMsgStateReq::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateReq.nodeId)
  return nodeid_.GetNoArena();
}
inline void BatchSendMsgStateReq::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateReq.nodeId)
}
#if LANG_CXX11
inline void BatchSendMsgStateReq::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.BatchSendMsgStateReq.nodeId)
}
#endif
inline void BatchSendMsgStateReq::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.BatchSendMsgStateReq.nodeId)
}
inline void BatchSendMsgStateReq::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.BatchSendMsgStateReq.nodeId)
}
inline ::std::string* BatchSendMsgStateReq::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.BatchSendMsgStateReq.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BatchSendMsgStateReq::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.BatchSendMsgStateReq.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BatchSendMsgStateReq::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.BatchSendMsgStateReq.nodeId)
}

// int32 msgSeq = 8;
inline void BatchSendMsgStateReq::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 BatchSendMsgStateReq::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateReq.msgSeq)
  return msgseq_;
}
inline void BatchSendMsgStateReq::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateReq.msgSeq)
}

// -------------------------------------------------------------------

// BatchSendMsgStateResp

// int32 code = 1;
inline void BatchSendMsgStateResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 BatchSendMsgStateResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateResp.code)
  return code_;
}
inline void BatchSendMsgStateResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateResp.code)
}

// string codeMsg = 2;
inline void BatchSendMsgStateResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BatchSendMsgStateResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void BatchSendMsgStateResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateResp.codeMsg)
}
#if LANG_CXX11
inline void BatchSendMsgStateResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.BatchSendMsgStateResp.codeMsg)
}
#endif
inline void BatchSendMsgStateResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.BatchSendMsgStateResp.codeMsg)
}
inline void BatchSendMsgStateResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.BatchSendMsgStateResp.codeMsg)
}
inline ::std::string* BatchSendMsgStateResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.BatchSendMsgStateResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BatchSendMsgStateResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.BatchSendMsgStateResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BatchSendMsgStateResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.BatchSendMsgStateResp.codeMsg)
}

// int64 clientMsgId = 3;
inline void BatchSendMsgStateResp::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BatchSendMsgStateResp::clientmsgid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateResp.clientMsgId)
  return clientmsgid_;
}
inline void BatchSendMsgStateResp::set_clientmsgid(::google::protobuf::int64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateResp.clientMsgId)
}

// int64 msgId = 4;
inline void BatchSendMsgStateResp::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BatchSendMsgStateResp::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateResp.msgId)
  return msgid_;
}
inline void BatchSendMsgStateResp::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateResp.msgId)
}

// repeated .im_client.MsgStatus opMsgId = 5;
inline int BatchSendMsgStateResp::opmsgid_size() const {
  return opmsgid_.size();
}
inline void BatchSendMsgStateResp::clear_opmsgid() {
  opmsgid_.Clear();
}
inline ::im_client::MsgStatus* BatchSendMsgStateResp::mutable_opmsgid(int index) {
  // @@protoc_insertion_point(field_mutable:im_client.BatchSendMsgStateResp.opMsgId)
  return opmsgid_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus >*
BatchSendMsgStateResp::mutable_opmsgid() {
  // @@protoc_insertion_point(field_mutable_list:im_client.BatchSendMsgStateResp.opMsgId)
  return &opmsgid_;
}
inline const ::im_client::MsgStatus& BatchSendMsgStateResp::opmsgid(int index) const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateResp.opMsgId)
  return opmsgid_.Get(index);
}
inline ::im_client::MsgStatus* BatchSendMsgStateResp::add_opmsgid() {
  // @@protoc_insertion_point(field_add:im_client.BatchSendMsgStateResp.opMsgId)
  return opmsgid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::im_client::MsgStatus >&
BatchSendMsgStateResp::opmsgid() const {
  // @@protoc_insertion_point(field_list:im_client.BatchSendMsgStateResp.opMsgId)
  return opmsgid_;
}

// int32 nodeStartTime = 6;
inline void BatchSendMsgStateResp::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 BatchSendMsgStateResp::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateResp.nodeStartTime)
  return nodestarttime_;
}
inline void BatchSendMsgStateResp::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateResp.nodeStartTime)
}

// string nodeId = 7;
inline void BatchSendMsgStateResp::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BatchSendMsgStateResp::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateResp.nodeId)
  return nodeid_.GetNoArena();
}
inline void BatchSendMsgStateResp::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateResp.nodeId)
}
#if LANG_CXX11
inline void BatchSendMsgStateResp::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.BatchSendMsgStateResp.nodeId)
}
#endif
inline void BatchSendMsgStateResp::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.BatchSendMsgStateResp.nodeId)
}
inline void BatchSendMsgStateResp::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.BatchSendMsgStateResp.nodeId)
}
inline ::std::string* BatchSendMsgStateResp::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.BatchSendMsgStateResp.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BatchSendMsgStateResp::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.BatchSendMsgStateResp.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BatchSendMsgStateResp::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.BatchSendMsgStateResp.nodeId)
}

// int32 msgSeq = 8;
inline void BatchSendMsgStateResp::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 BatchSendMsgStateResp::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.BatchSendMsgStateResp.msgSeq)
  return msgseq_;
}
inline void BatchSendMsgStateResp::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchSendMsgStateResp.msgSeq)
}

// -------------------------------------------------------------------

// BatchRecvMsgStateResp

// int64 msgId = 1;
inline void BatchRecvMsgStateResp::clear_msgid() {
  msgid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BatchRecvMsgStateResp::msgid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchRecvMsgStateResp.msgId)
  return msgid_;
}
inline void BatchRecvMsgStateResp::set_msgid(::google::protobuf::int64 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchRecvMsgStateResp.msgId)
}

// int32 nodeStartTime = 2;
inline void BatchRecvMsgStateResp::clear_nodestarttime() {
  nodestarttime_ = 0;
}
inline ::google::protobuf::int32 BatchRecvMsgStateResp::nodestarttime() const {
  // @@protoc_insertion_point(field_get:im_client.BatchRecvMsgStateResp.nodeStartTime)
  return nodestarttime_;
}
inline void BatchRecvMsgStateResp::set_nodestarttime(::google::protobuf::int32 value) {
  
  nodestarttime_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchRecvMsgStateResp.nodeStartTime)
}

// string nodeId = 3;
inline void BatchRecvMsgStateResp::clear_nodeid() {
  nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BatchRecvMsgStateResp::nodeid() const {
  // @@protoc_insertion_point(field_get:im_client.BatchRecvMsgStateResp.nodeId)
  return nodeid_.GetNoArena();
}
inline void BatchRecvMsgStateResp::set_nodeid(const ::std::string& value) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.BatchRecvMsgStateResp.nodeId)
}
#if LANG_CXX11
inline void BatchRecvMsgStateResp::set_nodeid(::std::string&& value) {
  
  nodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.BatchRecvMsgStateResp.nodeId)
}
#endif
inline void BatchRecvMsgStateResp::set_nodeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.BatchRecvMsgStateResp.nodeId)
}
inline void BatchRecvMsgStateResp::set_nodeid(const char* value, size_t size) {
  
  nodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.BatchRecvMsgStateResp.nodeId)
}
inline ::std::string* BatchRecvMsgStateResp::mutable_nodeid() {
  
  // @@protoc_insertion_point(field_mutable:im_client.BatchRecvMsgStateResp.nodeId)
  return nodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BatchRecvMsgStateResp::release_nodeid() {
  // @@protoc_insertion_point(field_release:im_client.BatchRecvMsgStateResp.nodeId)
  
  return nodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BatchRecvMsgStateResp::set_allocated_nodeid(::std::string* nodeid) {
  if (nodeid != NULL) {
    
  } else {
    
  }
  nodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nodeid);
  // @@protoc_insertion_point(field_set_allocated:im_client.BatchRecvMsgStateResp.nodeId)
}

// int32 msgSeq = 4;
inline void BatchRecvMsgStateResp::clear_msgseq() {
  msgseq_ = 0;
}
inline ::google::protobuf::int32 BatchRecvMsgStateResp::msgseq() const {
  // @@protoc_insertion_point(field_get:im_client.BatchRecvMsgStateResp.msgSeq)
  return msgseq_;
}
inline void BatchRecvMsgStateResp::set_msgseq(::google::protobuf::int32 value) {
  
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:im_client.BatchRecvMsgStateResp.msgSeq)
}

// -------------------------------------------------------------------

// PushFriendStatusReq

// int64 dstId = 1;
inline void PushFriendStatusReq::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PushFriendStatusReq::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.PushFriendStatusReq.dstId)
  return dstid_;
}
inline void PushFriendStatusReq::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushFriendStatusReq.dstId)
}

// string msg = 2;
inline void PushFriendStatusReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushFriendStatusReq::msg() const {
  // @@protoc_insertion_point(field_get:im_client.PushFriendStatusReq.msg)
  return msg_.GetNoArena();
}
inline void PushFriendStatusReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PushFriendStatusReq.msg)
}
#if LANG_CXX11
inline void PushFriendStatusReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PushFriendStatusReq.msg)
}
#endif
inline void PushFriendStatusReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PushFriendStatusReq.msg)
}
inline void PushFriendStatusReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PushFriendStatusReq.msg)
}
inline ::std::string* PushFriendStatusReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PushFriendStatusReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushFriendStatusReq::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.PushFriendStatusReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushFriendStatusReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PushFriendStatusReq.msg)
}

// -------------------------------------------------------------------

// PushFriendStatusResp

// int32 code = 1;
inline void PushFriendStatusResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 PushFriendStatusResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.PushFriendStatusResp.code)
  return code_;
}
inline void PushFriendStatusResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushFriendStatusResp.code)
}

// string codeMsg = 2;
inline void PushFriendStatusResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushFriendStatusResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.PushFriendStatusResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void PushFriendStatusResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PushFriendStatusResp.codeMsg)
}
#if LANG_CXX11
inline void PushFriendStatusResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PushFriendStatusResp.codeMsg)
}
#endif
inline void PushFriendStatusResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PushFriendStatusResp.codeMsg)
}
inline void PushFriendStatusResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PushFriendStatusResp.codeMsg)
}
inline ::std::string* PushFriendStatusResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PushFriendStatusResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushFriendStatusResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.PushFriendStatusResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushFriendStatusResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PushFriendStatusResp.codeMsg)
}

// -------------------------------------------------------------------

// SendSubscribeReq

// int64 fromId = 1;
inline void SendSubscribeReq::clear_fromid() {
  fromid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendSubscribeReq::fromid() const {
  // @@protoc_insertion_point(field_get:im_client.SendSubscribeReq.fromId)
  return fromid_;
}
inline void SendSubscribeReq::set_fromid(::google::protobuf::int64 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendSubscribeReq.fromId)
}

// int64 dstId = 2;
inline void SendSubscribeReq::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendSubscribeReq::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.SendSubscribeReq.dstId)
  return dstid_;
}
inline void SendSubscribeReq::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendSubscribeReq.dstId)
}

// int32 subCmd = 3;
inline void SendSubscribeReq::clear_subcmd() {
  subcmd_ = 0;
}
inline ::google::protobuf::int32 SendSubscribeReq::subcmd() const {
  // @@protoc_insertion_point(field_get:im_client.SendSubscribeReq.subCmd)
  return subcmd_;
}
inline void SendSubscribeReq::set_subcmd(::google::protobuf::int32 value) {
  
  subcmd_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendSubscribeReq.subCmd)
}

// string msg = 4;
inline void SendSubscribeReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendSubscribeReq::msg() const {
  // @@protoc_insertion_point(field_get:im_client.SendSubscribeReq.msg)
  return msg_.GetNoArena();
}
inline void SendSubscribeReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendSubscribeReq.msg)
}
#if LANG_CXX11
inline void SendSubscribeReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendSubscribeReq.msg)
}
#endif
inline void SendSubscribeReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendSubscribeReq.msg)
}
inline void SendSubscribeReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendSubscribeReq.msg)
}
inline ::std::string* SendSubscribeReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendSubscribeReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendSubscribeReq::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.SendSubscribeReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendSubscribeReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendSubscribeReq.msg)
}

// -------------------------------------------------------------------

// SendSubscribeResp

// int32 code = 1;
inline void SendSubscribeResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 SendSubscribeResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.SendSubscribeResp.code)
  return code_;
}
inline void SendSubscribeResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendSubscribeResp.code)
}

// string codeMsg = 2;
inline void SendSubscribeResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendSubscribeResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.SendSubscribeResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void SendSubscribeResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendSubscribeResp.codeMsg)
}
#if LANG_CXX11
inline void SendSubscribeResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendSubscribeResp.codeMsg)
}
#endif
inline void SendSubscribeResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendSubscribeResp.codeMsg)
}
inline void SendSubscribeResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendSubscribeResp.codeMsg)
}
inline ::std::string* SendSubscribeResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendSubscribeResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendSubscribeResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.SendSubscribeResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendSubscribeResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendSubscribeResp.codeMsg)
}

// int64 dstId = 3;
inline void SendSubscribeResp::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendSubscribeResp::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.SendSubscribeResp.dstId)
  return dstid_;
}
inline void SendSubscribeResp::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.SendSubscribeResp.dstId)
}

// string msg = 4;
inline void SendSubscribeResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendSubscribeResp::msg() const {
  // @@protoc_insertion_point(field_get:im_client.SendSubscribeResp.msg)
  return msg_.GetNoArena();
}
inline void SendSubscribeResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.SendSubscribeResp.msg)
}
#if LANG_CXX11
inline void SendSubscribeResp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.SendSubscribeResp.msg)
}
#endif
inline void SendSubscribeResp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.SendSubscribeResp.msg)
}
inline void SendSubscribeResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.SendSubscribeResp.msg)
}
inline ::std::string* SendSubscribeResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.SendSubscribeResp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendSubscribeResp::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.SendSubscribeResp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendSubscribeResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:im_client.SendSubscribeResp.msg)
}

// -------------------------------------------------------------------

// PushSubscribeReq

// int64 dstId = 1;
inline void PushSubscribeReq::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PushSubscribeReq::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.PushSubscribeReq.dstId)
  return dstid_;
}
inline void PushSubscribeReq::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushSubscribeReq.dstId)
}

// int32 subCmd = 2;
inline void PushSubscribeReq::clear_subcmd() {
  subcmd_ = 0;
}
inline ::google::protobuf::int32 PushSubscribeReq::subcmd() const {
  // @@protoc_insertion_point(field_get:im_client.PushSubscribeReq.subCmd)
  return subcmd_;
}
inline void PushSubscribeReq::set_subcmd(::google::protobuf::int32 value) {
  
  subcmd_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushSubscribeReq.subCmd)
}

// string msg = 3;
inline void PushSubscribeReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushSubscribeReq::msg() const {
  // @@protoc_insertion_point(field_get:im_client.PushSubscribeReq.msg)
  return msg_.GetNoArena();
}
inline void PushSubscribeReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PushSubscribeReq.msg)
}
#if LANG_CXX11
inline void PushSubscribeReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PushSubscribeReq.msg)
}
#endif
inline void PushSubscribeReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PushSubscribeReq.msg)
}
inline void PushSubscribeReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PushSubscribeReq.msg)
}
inline ::std::string* PushSubscribeReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PushSubscribeReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushSubscribeReq::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.PushSubscribeReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushSubscribeReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PushSubscribeReq.msg)
}

// -------------------------------------------------------------------

// PushSubscribeResp

// int32 code = 1;
inline void PushSubscribeResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 PushSubscribeResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.PushSubscribeResp.code)
  return code_;
}
inline void PushSubscribeResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.PushSubscribeResp.code)
}

// string codeMsg = 2;
inline void PushSubscribeResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushSubscribeResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.PushSubscribeResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void PushSubscribeResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PushSubscribeResp.codeMsg)
}
#if LANG_CXX11
inline void PushSubscribeResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PushSubscribeResp.codeMsg)
}
#endif
inline void PushSubscribeResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PushSubscribeResp.codeMsg)
}
inline void PushSubscribeResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PushSubscribeResp.codeMsg)
}
inline ::std::string* PushSubscribeResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PushSubscribeResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushSubscribeResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.PushSubscribeResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushSubscribeResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PushSubscribeResp.codeMsg)
}

// -------------------------------------------------------------------

// PullGroupOnlineInfoReq

// int64 fromId = 1;
inline void PullGroupOnlineInfoReq::clear_fromid() {
  fromid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PullGroupOnlineInfoReq::fromid() const {
  // @@protoc_insertion_point(field_get:im_client.PullGroupOnlineInfoReq.fromId)
  return fromid_;
}
inline void PullGroupOnlineInfoReq::set_fromid(::google::protobuf::int64 value) {
  
  fromid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PullGroupOnlineInfoReq.fromId)
}

// repeated int64 userIds = 2;
inline int PullGroupOnlineInfoReq::userids_size() const {
  return userids_.size();
}
inline void PullGroupOnlineInfoReq::clear_userids() {
  userids_.Clear();
}
inline ::google::protobuf::int64 PullGroupOnlineInfoReq::userids(int index) const {
  // @@protoc_insertion_point(field_get:im_client.PullGroupOnlineInfoReq.userIds)
  return userids_.Get(index);
}
inline void PullGroupOnlineInfoReq::set_userids(int index, ::google::protobuf::int64 value) {
  userids_.Set(index, value);
  // @@protoc_insertion_point(field_set:im_client.PullGroupOnlineInfoReq.userIds)
}
inline void PullGroupOnlineInfoReq::add_userids(::google::protobuf::int64 value) {
  userids_.Add(value);
  // @@protoc_insertion_point(field_add:im_client.PullGroupOnlineInfoReq.userIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PullGroupOnlineInfoReq::userids() const {
  // @@protoc_insertion_point(field_list:im_client.PullGroupOnlineInfoReq.userIds)
  return userids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PullGroupOnlineInfoReq::mutable_userids() {
  // @@protoc_insertion_point(field_mutable_list:im_client.PullGroupOnlineInfoReq.userIds)
  return &userids_;
}

// int64 groupId = 3;
inline void PullGroupOnlineInfoReq::clear_groupid() {
  groupid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PullGroupOnlineInfoReq::groupid() const {
  // @@protoc_insertion_point(field_get:im_client.PullGroupOnlineInfoReq.groupId)
  return groupid_;
}
inline void PullGroupOnlineInfoReq::set_groupid(::google::protobuf::int64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PullGroupOnlineInfoReq.groupId)
}

// -------------------------------------------------------------------

// PullGroupOnlineInfoResp

// int32 code = 1;
inline void PullGroupOnlineInfoResp::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 PullGroupOnlineInfoResp::code() const {
  // @@protoc_insertion_point(field_get:im_client.PullGroupOnlineInfoResp.code)
  return code_;
}
inline void PullGroupOnlineInfoResp::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:im_client.PullGroupOnlineInfoResp.code)
}

// string codeMsg = 2;
inline void PullGroupOnlineInfoResp::clear_codemsg() {
  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PullGroupOnlineInfoResp::codemsg() const {
  // @@protoc_insertion_point(field_get:im_client.PullGroupOnlineInfoResp.codeMsg)
  return codemsg_.GetNoArena();
}
inline void PullGroupOnlineInfoResp::set_codemsg(const ::std::string& value) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PullGroupOnlineInfoResp.codeMsg)
}
#if LANG_CXX11
inline void PullGroupOnlineInfoResp::set_codemsg(::std::string&& value) {
  
  codemsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PullGroupOnlineInfoResp.codeMsg)
}
#endif
inline void PullGroupOnlineInfoResp::set_codemsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PullGroupOnlineInfoResp.codeMsg)
}
inline void PullGroupOnlineInfoResp::set_codemsg(const char* value, size_t size) {
  
  codemsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PullGroupOnlineInfoResp.codeMsg)
}
inline ::std::string* PullGroupOnlineInfoResp::mutable_codemsg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PullGroupOnlineInfoResp.codeMsg)
  return codemsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PullGroupOnlineInfoResp::release_codemsg() {
  // @@protoc_insertion_point(field_release:im_client.PullGroupOnlineInfoResp.codeMsg)
  
  return codemsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PullGroupOnlineInfoResp::set_allocated_codemsg(::std::string* codemsg) {
  if (codemsg != NULL) {
    
  } else {
    
  }
  codemsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codemsg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PullGroupOnlineInfoResp.codeMsg)
}

// int64 dstId = 3;
inline void PullGroupOnlineInfoResp::clear_dstid() {
  dstid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PullGroupOnlineInfoResp::dstid() const {
  // @@protoc_insertion_point(field_get:im_client.PullGroupOnlineInfoResp.dstId)
  return dstid_;
}
inline void PullGroupOnlineInfoResp::set_dstid(::google::protobuf::int64 value) {
  
  dstid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PullGroupOnlineInfoResp.dstId)
}

// int64 groupId = 4;
inline void PullGroupOnlineInfoResp::clear_groupid() {
  groupid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PullGroupOnlineInfoResp::groupid() const {
  // @@protoc_insertion_point(field_get:im_client.PullGroupOnlineInfoResp.groupId)
  return groupid_;
}
inline void PullGroupOnlineInfoResp::set_groupid(::google::protobuf::int64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:im_client.PullGroupOnlineInfoResp.groupId)
}

// string msg = 5;
inline void PullGroupOnlineInfoResp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PullGroupOnlineInfoResp::msg() const {
  // @@protoc_insertion_point(field_get:im_client.PullGroupOnlineInfoResp.msg)
  return msg_.GetNoArena();
}
inline void PullGroupOnlineInfoResp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:im_client.PullGroupOnlineInfoResp.msg)
}
#if LANG_CXX11
inline void PullGroupOnlineInfoResp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:im_client.PullGroupOnlineInfoResp.msg)
}
#endif
inline void PullGroupOnlineInfoResp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:im_client.PullGroupOnlineInfoResp.msg)
}
inline void PullGroupOnlineInfoResp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:im_client.PullGroupOnlineInfoResp.msg)
}
inline ::std::string* PullGroupOnlineInfoResp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:im_client.PullGroupOnlineInfoResp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PullGroupOnlineInfoResp::release_msg() {
  // @@protoc_insertion_point(field_release:im_client.PullGroupOnlineInfoResp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PullGroupOnlineInfoResp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:im_client.PullGroupOnlineInfoResp.msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace im_client

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_client_2eproto
