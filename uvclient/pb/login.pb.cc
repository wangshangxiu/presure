// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_errorinfo;
}  // namespace protobuf_common_2eproto
namespace im_login {
class RsaDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RsaData>
      _instance;
} _RsaData_default_instance_;
class AESDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AESData>
      _instance;
} _AESData_default_instance_;
class LoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Login>
      _instance;
} _Login_default_instance_;
class LoginRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRsp>
      _instance;
} _LoginRsp_default_instance_;
class LogoutRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogoutRsp>
      _instance;
} _LogoutRsp_default_instance_;
}  // namespace im_login
namespace protobuf_login_2eproto {
static void InitDefaultsRsaData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_login::_RsaData_default_instance_;
    new (ptr) ::im_login::RsaData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_login::RsaData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RsaData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsaData}, {}};

static void InitDefaultsAESData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_login::_AESData_default_instance_;
    new (ptr) ::im_login::AESData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_login::AESData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AESData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAESData}, {}};

static void InitDefaultsLogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_login::_Login_default_instance_;
    new (ptr) ::im_login::Login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_login::Login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Login =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogin}, {}};

static void InitDefaultsLoginRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_login::_LoginRsp_default_instance_;
    new (ptr) ::im_login::LoginRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_login::LoginRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginRsp}, {}};

static void InitDefaultsLogoutRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::im_login::_LogoutRsp_default_instance_;
    new (ptr) ::im_login::LogoutRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::im_login::LogoutRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LogoutRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLogoutRsp}, {
      &protobuf_common_2eproto::scc_info_errorinfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RsaData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AESData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Login.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogoutRsp.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::RsaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::RsaData, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::RsaData, ecdhpubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::RsaData, aeskey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::AESData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::AESData, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::AESData, clienttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::AESData, devid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::AESData, loginseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::AESData, other_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::Login, rasversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::Login, rsadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::Login, aesdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, codemsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, ecdhserverpubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, sessionkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, startseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, servertime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, other_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LoginRsp, loginseq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LogoutRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::im_login::LogoutRsp, error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::im_login::RsaData)},
  { 8, -1, sizeof(::im_login::AESData)},
  { 18, -1, sizeof(::im_login::Login)},
  { 26, -1, sizeof(::im_login::LoginRsp)},
  { 40, -1, sizeof(::im_login::LogoutRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_login::_RsaData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_login::_AESData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_login::_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_login::_LoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::im_login::_LogoutRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "login.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013login.proto\022\010im_login\032\014common.proto\"=\n"
      "\007RsaData\022\016\n\006userId\030\001 \001(\003\022\022\n\necdhPubKey\030\002"
      " \001(\014\022\016\n\006aesKey\030\003 \001(\t\"\\\n\007AESData\022\r\n\005token"
      "\030\001 \001(\t\022\022\n\nclientTime\030\002 \001(\005\022\r\n\005devId\030\003 \001("
      "\t\022\020\n\010loginSeq\030\004 \001(\003\022\r\n\005other\030\005 \001(\t\"=\n\005Lo"
      "gin\022\022\n\nrasVersion\030\001 \001(\005\022\017\n\007rsaData\030\002 \001(\014"
      "\022\017\n\007aesData\030\003 \001(\014\"\261\001\n\010LoginRsp\022\014\n\004code\030\001"
      " \001(\005\022\017\n\007codeMsg\030\002 \001(\t\022\030\n\020ecdhServerPubKe"
      "y\030\003 \001(\014\022\022\n\nsessionKey\030\004 \001(\014\022\021\n\tsessionID"
      "\030\005 \001(\t\022\020\n\010startSeq\030\006 \001(\005\022\022\n\nserverTime\030\007"
      " \001(\005\022\r\n\005other\030\010 \001(\t\022\020\n\010loginSeq\030\t \001(\003\"-\n"
      "\tLogoutRsp\022 \n\005error\030\001 \001(\0132\021.common.error"
      "infob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 492);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_login_2eproto
namespace im_login {

// ===================================================================

void RsaData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RsaData::kUserIdFieldNumber;
const int RsaData::kEcdhPubKeyFieldNumber;
const int RsaData::kAesKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RsaData::RsaData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_login_2eproto::scc_info_RsaData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_login.RsaData)
}
RsaData::RsaData(const RsaData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ecdhpubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ecdhpubkey().size() > 0) {
    ecdhpubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ecdhpubkey_);
  }
  aeskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.aeskey().size() > 0) {
    aeskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aeskey_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:im_login.RsaData)
}

void RsaData::SharedCtor() {
  ecdhpubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aeskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_LONGLONG(0);
}

RsaData::~RsaData() {
  // @@protoc_insertion_point(destructor:im_login.RsaData)
  SharedDtor();
}

void RsaData::SharedDtor() {
  ecdhpubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aeskey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RsaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RsaData::descriptor() {
  ::protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RsaData& RsaData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_login_2eproto::scc_info_RsaData.base);
  return *internal_default_instance();
}


void RsaData::Clear() {
// @@protoc_insertion_point(message_clear_start:im_login.RsaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ecdhpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool RsaData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_login.RsaData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ecdhPubKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ecdhpubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string aesKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aeskey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->aeskey().data(), static_cast<int>(this->aeskey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im_login.RsaData.aesKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_login.RsaData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_login.RsaData)
  return false;
#undef DO_
}

void RsaData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_login.RsaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 userId = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  // bytes ecdhPubKey = 2;
  if (this->ecdhpubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ecdhpubkey(), output);
  }

  // string aesKey = 3;
  if (this->aeskey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aeskey().data(), static_cast<int>(this->aeskey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.RsaData.aesKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->aeskey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im_login.RsaData)
}

::google::protobuf::uint8* RsaData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_login.RsaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 userId = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  // bytes ecdhPubKey = 2;
  if (this->ecdhpubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ecdhpubkey(), target);
  }

  // string aesKey = 3;
  if (this->aeskey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aeskey().data(), static_cast<int>(this->aeskey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.RsaData.aesKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->aeskey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_login.RsaData)
  return target;
}

size_t RsaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_login.RsaData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ecdhPubKey = 2;
  if (this->ecdhpubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ecdhpubkey());
  }

  // string aesKey = 3;
  if (this->aeskey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->aeskey());
  }

  // int64 userId = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RsaData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_login.RsaData)
  GOOGLE_DCHECK_NE(&from, this);
  const RsaData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RsaData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_login.RsaData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_login.RsaData)
    MergeFrom(*source);
  }
}

void RsaData::MergeFrom(const RsaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_login.RsaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ecdhpubkey().size() > 0) {

    ecdhpubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ecdhpubkey_);
  }
  if (from.aeskey().size() > 0) {

    aeskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aeskey_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void RsaData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_login.RsaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RsaData::CopyFrom(const RsaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_login.RsaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RsaData::IsInitialized() const {
  return true;
}

void RsaData::Swap(RsaData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RsaData::InternalSwap(RsaData* other) {
  using std::swap;
  ecdhpubkey_.Swap(&other->ecdhpubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  aeskey_.Swap(&other->aeskey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RsaData::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AESData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AESData::kTokenFieldNumber;
const int AESData::kClientTimeFieldNumber;
const int AESData::kDevIdFieldNumber;
const int AESData::kLoginSeqFieldNumber;
const int AESData::kOtherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AESData::AESData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_login_2eproto::scc_info_AESData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_login.AESData)
}
AESData::AESData(const AESData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  devid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devid().size() > 0) {
    devid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devid_);
  }
  other_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.other().size() > 0) {
    other_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_);
  }
  ::memcpy(&loginseq_, &from.loginseq_,
    static_cast<size_t>(reinterpret_cast<char*>(&clienttime_) -
    reinterpret_cast<char*>(&loginseq_)) + sizeof(clienttime_));
  // @@protoc_insertion_point(copy_constructor:im_login.AESData)
}

void AESData::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&loginseq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clienttime_) -
      reinterpret_cast<char*>(&loginseq_)) + sizeof(clienttime_));
}

AESData::~AESData() {
  // @@protoc_insertion_point(destructor:im_login.AESData)
  SharedDtor();
}

void AESData::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AESData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AESData::descriptor() {
  ::protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AESData& AESData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_login_2eproto::scc_info_AESData.base);
  return *internal_default_instance();
}


void AESData::Clear() {
// @@protoc_insertion_point(message_clear_start:im_login.AESData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&loginseq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clienttime_) -
      reinterpret_cast<char*>(&loginseq_)) + sizeof(clienttime_));
  _internal_metadata_.Clear();
}

bool AESData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_login.AESData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im_login.AESData.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 clientTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clienttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string devId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devid().data(), static_cast<int>(this->devid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im_login.AESData.devId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 loginSeq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &loginseq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string other = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->other().data(), static_cast<int>(this->other().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im_login.AESData.other"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_login.AESData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_login.AESData)
  return false;
#undef DO_
}

void AESData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_login.AESData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.AESData.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // int32 clientTime = 2;
  if (this->clienttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clienttime(), output);
  }

  // string devId = 3;
  if (this->devid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devid().data(), static_cast<int>(this->devid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.AESData.devId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->devid(), output);
  }

  // int64 loginSeq = 4;
  if (this->loginseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->loginseq(), output);
  }

  // string other = 5;
  if (this->other().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other().data(), static_cast<int>(this->other().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.AESData.other");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->other(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im_login.AESData)
}

::google::protobuf::uint8* AESData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_login.AESData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.AESData.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // int32 clientTime = 2;
  if (this->clienttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clienttime(), target);
  }

  // string devId = 3;
  if (this->devid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devid().data(), static_cast<int>(this->devid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.AESData.devId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->devid(), target);
  }

  // int64 loginSeq = 4;
  if (this->loginseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->loginseq(), target);
  }

  // string other = 5;
  if (this->other().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other().data(), static_cast<int>(this->other().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.AESData.other");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->other(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_login.AESData)
  return target;
}

size_t AESData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_login.AESData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string devId = 3;
  if (this->devid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devid());
  }

  // string other = 5;
  if (this->other().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->other());
  }

  // int64 loginSeq = 4;
  if (this->loginseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->loginseq());
  }

  // int32 clientTime = 2;
  if (this->clienttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clienttime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AESData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_login.AESData)
  GOOGLE_DCHECK_NE(&from, this);
  const AESData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AESData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_login.AESData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_login.AESData)
    MergeFrom(*source);
  }
}

void AESData::MergeFrom(const AESData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_login.AESData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.devid().size() > 0) {

    devid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devid_);
  }
  if (from.other().size() > 0) {

    other_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_);
  }
  if (from.loginseq() != 0) {
    set_loginseq(from.loginseq());
  }
  if (from.clienttime() != 0) {
    set_clienttime(from.clienttime());
  }
}

void AESData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_login.AESData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AESData::CopyFrom(const AESData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_login.AESData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AESData::IsInitialized() const {
  return true;
}

void AESData::Swap(AESData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AESData::InternalSwap(AESData* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devid_.Swap(&other->devid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  other_.Swap(&other->other_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(loginseq_, other->loginseq_);
  swap(clienttime_, other->clienttime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AESData::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login::kRasVersionFieldNumber;
const int Login::kRsaDataFieldNumber;
const int Login::kAesDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login::Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_login_2eproto::scc_info_Login.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_login.Login)
}
Login::Login(const Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rsadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rsadata().size() > 0) {
    rsadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rsadata_);
  }
  aesdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.aesdata().size() > 0) {
    aesdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aesdata_);
  }
  rasversion_ = from.rasversion_;
  // @@protoc_insertion_point(copy_constructor:im_login.Login)
}

void Login::SharedCtor() {
  rsadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aesdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rasversion_ = 0;
}

Login::~Login() {
  // @@protoc_insertion_point(destructor:im_login.Login)
  SharedDtor();
}

void Login::SharedDtor() {
  rsadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aesdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Login::descriptor() {
  ::protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Login& Login::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_login_2eproto::scc_info_Login.base);
  return *internal_default_instance();
}


void Login::Clear() {
// @@protoc_insertion_point(message_clear_start:im_login.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rsadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aesdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rasversion_ = 0;
  _internal_metadata_.Clear();
}

bool Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_login.Login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rasVersion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rasversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes rsaData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rsadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes aesData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_aesdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_login.Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_login.Login)
  return false;
#undef DO_
}

void Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_login.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rasVersion = 1;
  if (this->rasversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rasversion(), output);
  }

  // bytes rsaData = 2;
  if (this->rsadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->rsadata(), output);
  }

  // bytes aesData = 3;
  if (this->aesdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->aesdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im_login.Login)
}

::google::protobuf::uint8* Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_login.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rasVersion = 1;
  if (this->rasversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rasversion(), target);
  }

  // bytes rsaData = 2;
  if (this->rsadata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->rsadata(), target);
  }

  // bytes aesData = 3;
  if (this->aesdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->aesdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_login.Login)
  return target;
}

size_t Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_login.Login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes rsaData = 2;
  if (this->rsadata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rsadata());
  }

  // bytes aesData = 3;
  if (this->aesdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->aesdata());
  }

  // int32 rasVersion = 1;
  if (this->rasversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rasversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_login.Login)
  GOOGLE_DCHECK_NE(&from, this);
  const Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_login.Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_login.Login)
    MergeFrom(*source);
  }
}

void Login::MergeFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_login.Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rsadata().size() > 0) {

    rsadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rsadata_);
  }
  if (from.aesdata().size() > 0) {

    aesdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aesdata_);
  }
  if (from.rasversion() != 0) {
    set_rasversion(from.rasversion());
  }
}

void Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_login.Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login::CopyFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_login.Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login::IsInitialized() const {
  return true;
}

void Login::Swap(Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login::InternalSwap(Login* other) {
  using std::swap;
  rsadata_.Swap(&other->rsadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  aesdata_.Swap(&other->aesdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rasversion_, other->rasversion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Login::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRsp::kCodeFieldNumber;
const int LoginRsp::kCodeMsgFieldNumber;
const int LoginRsp::kEcdhServerPubKeyFieldNumber;
const int LoginRsp::kSessionKeyFieldNumber;
const int LoginRsp::kSessionIDFieldNumber;
const int LoginRsp::kStartSeqFieldNumber;
const int LoginRsp::kServerTimeFieldNumber;
const int LoginRsp::kOtherFieldNumber;
const int LoginRsp::kLoginSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRsp::LoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_login_2eproto::scc_info_LoginRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_login.LoginRsp)
}
LoginRsp::LoginRsp(const LoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  codemsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.codemsg().size() > 0) {
    codemsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codemsg_);
  }
  ecdhserverpubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ecdhserverpubkey().size() > 0) {
    ecdhserverpubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ecdhserverpubkey_);
  }
  sessionkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionkey().size() > 0) {
    sessionkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionkey_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionid().size() > 0) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  other_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.other().size() > 0) {
    other_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&servertime_) -
    reinterpret_cast<char*>(&code_)) + sizeof(servertime_));
  // @@protoc_insertion_point(copy_constructor:im_login.LoginRsp)
}

void LoginRsp::SharedCtor() {
  codemsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ecdhserverpubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&code_)) + sizeof(servertime_));
}

LoginRsp::~LoginRsp() {
  // @@protoc_insertion_point(destructor:im_login.LoginRsp)
  SharedDtor();
}

void LoginRsp::SharedDtor() {
  codemsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ecdhserverpubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginRsp::descriptor() {
  ::protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRsp& LoginRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_login_2eproto::scc_info_LoginRsp.base);
  return *internal_default_instance();
}


void LoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:im_login.LoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  codemsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ecdhserverpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&code_)) + sizeof(servertime_));
  _internal_metadata_.Clear();
}

bool LoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_login.LoginRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string codeMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_codemsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->codemsg().data(), static_cast<int>(this->codemsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im_login.LoginRsp.codeMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ecdhServerPubKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ecdhserverpubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sessionKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sessionkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sessionID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im_login.LoginRsp.sessionID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 startSeq = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startseq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 serverTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string other = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->other().data(), static_cast<int>(this->other().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "im_login.LoginRsp.other"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 loginSeq = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &loginseq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_login.LoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_login.LoginRsp)
  return false;
#undef DO_
}

void LoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_login.LoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string codeMsg = 2;
  if (this->codemsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codemsg().data(), static_cast<int>(this->codemsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.LoginRsp.codeMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->codemsg(), output);
  }

  // bytes ecdhServerPubKey = 3;
  if (this->ecdhserverpubkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ecdhserverpubkey(), output);
  }

  // bytes sessionKey = 4;
  if (this->sessionkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sessionkey(), output);
  }

  // string sessionID = 5;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.LoginRsp.sessionID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sessionid(), output);
  }

  // int32 startSeq = 6;
  if (this->startseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->startseq(), output);
  }

  // int32 serverTime = 7;
  if (this->servertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->servertime(), output);
  }

  // string other = 8;
  if (this->other().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other().data(), static_cast<int>(this->other().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.LoginRsp.other");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->other(), output);
  }

  // int64 loginSeq = 9;
  if (this->loginseq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->loginseq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im_login.LoginRsp)
}

::google::protobuf::uint8* LoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_login.LoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string codeMsg = 2;
  if (this->codemsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codemsg().data(), static_cast<int>(this->codemsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.LoginRsp.codeMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->codemsg(), target);
  }

  // bytes ecdhServerPubKey = 3;
  if (this->ecdhserverpubkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ecdhserverpubkey(), target);
  }

  // bytes sessionKey = 4;
  if (this->sessionkey().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sessionkey(), target);
  }

  // string sessionID = 5;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.LoginRsp.sessionID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sessionid(), target);
  }

  // int32 startSeq = 6;
  if (this->startseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->startseq(), target);
  }

  // int32 serverTime = 7;
  if (this->servertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->servertime(), target);
  }

  // string other = 8;
  if (this->other().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other().data(), static_cast<int>(this->other().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "im_login.LoginRsp.other");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->other(), target);
  }

  // int64 loginSeq = 9;
  if (this->loginseq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->loginseq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_login.LoginRsp)
  return target;
}

size_t LoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_login.LoginRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string codeMsg = 2;
  if (this->codemsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->codemsg());
  }

  // bytes ecdhServerPubKey = 3;
  if (this->ecdhserverpubkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ecdhserverpubkey());
  }

  // bytes sessionKey = 4;
  if (this->sessionkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sessionkey());
  }

  // string sessionID = 5;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  // string other = 8;
  if (this->other().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->other());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // int32 startSeq = 6;
  if (this->startseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startseq());
  }

  // int64 loginSeq = 9;
  if (this->loginseq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->loginseq());
  }

  // int32 serverTime = 7;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->servertime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_login.LoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_login.LoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_login.LoginRsp)
    MergeFrom(*source);
  }
}

void LoginRsp::MergeFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_login.LoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.codemsg().size() > 0) {

    codemsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codemsg_);
  }
  if (from.ecdhserverpubkey().size() > 0) {

    ecdhserverpubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ecdhserverpubkey_);
  }
  if (from.sessionkey().size() > 0) {

    sessionkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionkey_);
  }
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.other().size() > 0) {

    other_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.startseq() != 0) {
    set_startseq(from.startseq());
  }
  if (from.loginseq() != 0) {
    set_loginseq(from.loginseq());
  }
  if (from.servertime() != 0) {
    set_servertime(from.servertime());
  }
}

void LoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_login.LoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRsp::CopyFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_login.LoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRsp::IsInitialized() const {
  return true;
}

void LoginRsp::Swap(LoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRsp::InternalSwap(LoginRsp* other) {
  using std::swap;
  codemsg_.Swap(&other->codemsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ecdhserverpubkey_.Swap(&other->ecdhserverpubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sessionkey_.Swap(&other->sessionkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  other_.Swap(&other->other_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(startseq_, other->startseq_);
  swap(loginseq_, other->loginseq_);
  swap(servertime_, other->servertime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginRsp::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogoutRsp::InitAsDefaultInstance() {
  ::im_login::_LogoutRsp_default_instance_._instance.get_mutable()->error_ = const_cast< ::common::errorinfo*>(
      ::common::errorinfo::internal_default_instance());
}
void LogoutRsp::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutRsp::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutRsp::LogoutRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_login_2eproto::scc_info_LogoutRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:im_login.LogoutRsp)
}
LogoutRsp::LogoutRsp(const LogoutRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::common::errorinfo(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:im_login.LogoutRsp)
}

void LogoutRsp::SharedCtor() {
  error_ = NULL;
}

LogoutRsp::~LogoutRsp() {
  // @@protoc_insertion_point(destructor:im_login.LogoutRsp)
  SharedDtor();
}

void LogoutRsp::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void LogoutRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogoutRsp::descriptor() {
  ::protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogoutRsp& LogoutRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_login_2eproto::scc_info_LogoutRsp.base);
  return *internal_default_instance();
}


void LogoutRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:im_login.LogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool LogoutRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:im_login.LogoutRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errorinfo error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:im_login.LogoutRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:im_login.LogoutRsp)
  return false;
#undef DO_
}

void LogoutRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:im_login.LogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errorinfo error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:im_login.LogoutRsp)
}

::google::protobuf::uint8* LogoutRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:im_login.LogoutRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errorinfo error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:im_login.LogoutRsp)
  return target;
}

size_t LogoutRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:im_login.LogoutRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errorinfo error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogoutRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:im_login.LogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:im_login.LogoutRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:im_login.LogoutRsp)
    MergeFrom(*source);
  }
}

void LogoutRsp::MergeFrom(const LogoutRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:im_login.LogoutRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::common::errorinfo::MergeFrom(from.error());
  }
}

void LogoutRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:im_login.LogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutRsp::CopyFrom(const LogoutRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im_login.LogoutRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRsp::IsInitialized() const {
  return true;
}

void LogoutRsp::Swap(LogoutRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutRsp::InternalSwap(LogoutRsp* other) {
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogoutRsp::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace im_login
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_login::RsaData* Arena::CreateMaybeMessage< ::im_login::RsaData >(Arena* arena) {
  return Arena::CreateInternal< ::im_login::RsaData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_login::AESData* Arena::CreateMaybeMessage< ::im_login::AESData >(Arena* arena) {
  return Arena::CreateInternal< ::im_login::AESData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_login::Login* Arena::CreateMaybeMessage< ::im_login::Login >(Arena* arena) {
  return Arena::CreateInternal< ::im_login::Login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_login::LoginRsp* Arena::CreateMaybeMessage< ::im_login::LoginRsp >(Arena* arena) {
  return Arena::CreateInternal< ::im_login::LoginRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::im_login::LogoutRsp* Arena::CreateMaybeMessage< ::im_login::LogoutRsp >(Arena* arena) {
  return Arena::CreateInternal< ::im_login::LogoutRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
