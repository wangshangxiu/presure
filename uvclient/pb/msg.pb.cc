// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#include "msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class MsgHeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgHead>
      _instance;
} _MsgHead_default_instance_;
class MsgBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgBody>
      _instance;
} _MsgBody_default_instance_;
class OrdinaryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrdinaryResponse>
      _instance;
} _OrdinaryResponse_default_instance_;
namespace protobuf_msg_2eproto {
static void InitDefaultsMsgHead() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MsgHead_default_instance_;
    new (ptr) ::MsgHead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgHead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgHead =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgHead}, {}};

static void InitDefaultsMsgBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MsgBody_default_instance_;
    new (ptr) ::MsgBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MsgBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgBody}, {}};

static void InitDefaultsOrdinaryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_OrdinaryResponse_default_instance_;
    new (ptr) ::OrdinaryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OrdinaryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OrdinaryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrdinaryResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgHead.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrdinaryResponse.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, msgbody_len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgHead, checksum_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, targetid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, sbody_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, additional_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, node_identify_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MsgBody, status_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrdinaryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrdinaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrdinaryResponse, err_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OrdinaryResponse, err_msg_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::MsgHead)},
  { 13, 24, sizeof(::MsgBody)},
  { 30, 37, sizeof(::OrdinaryResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MsgBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_OrdinaryResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tmsg.proto\"J\n\007MsgHead\022\013\n\003cmd\030\001 \002(\007\022\023\n\013m"
      "sgbody_len\030\002 \002(\007\022\013\n\003seq\030\003 \002(\007\022\020\n\010checksu"
      "m\030\004 \001(\007\"s\n\007MsgBody\022\014\n\004body\030\001 \001(\014\022\020\n\010targ"
      "etId\030\002 \001(\014\022\r\n\005sbody\030\003 \001(\t\022\022\n\nadditional\030"
      "\005 \001(\014\022\025\n\rnode_identify\030\006 \001(\t\022\016\n\006status\030\007"
      " \001(\r\"3\n\020OrdinaryResponse\022\016\n\006err_no\030\001 \001(\005"
      "\022\017\n\007err_msg\030\002 \001(\014"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 257);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_2eproto

// ===================================================================

void MsgHead::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHead::kCmdFieldNumber;
const int MsgHead::kMsgbodyLenFieldNumber;
const int MsgHead::kSeqFieldNumber;
const int MsgHead::kChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHead::MsgHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_2eproto::scc_info_MsgHead.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgHead)
}
MsgHead::MsgHead(const MsgHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(checksum_));
  // @@protoc_insertion_point(copy_constructor:MsgHead)
}

void MsgHead::SharedCtor() {
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&checksum_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(checksum_));
}

MsgHead::~MsgHead() {
  // @@protoc_insertion_point(destructor:MsgHead)
  SharedDtor();
}

void MsgHead::SharedDtor() {
}

void MsgHead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgHead::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgHead& MsgHead::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_2eproto::scc_info_MsgHead.base);
  return *internal_default_instance();
}


void MsgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&cmd_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&checksum_) -
        reinterpret_cast<char*>(&cmd_)) + sizeof(checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgHead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_cmd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed32 msgbody_len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_msgbody_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &msgbody_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed32 seq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 checksum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgHead)
  return false;
#undef DO_
}

void MsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed32 cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->cmd(), output);
  }

  // required fixed32 msgbody_len = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->msgbody_len(), output);
  }

  // required fixed32 seq = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->seq(), output);
  }

  // optional fixed32 checksum = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgHead)
}

::google::protobuf::uint8* MsgHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required fixed32 cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->cmd(), target);
  }

  // required fixed32 msgbody_len = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->msgbody_len(), target);
  }

  // required fixed32 seq = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->seq(), target);
  }

  // optional fixed32 checksum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgHead)
  return target;
}

size_t MsgHead::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MsgHead)
  size_t total_size = 0;

  if (has_cmd()) {
    // required fixed32 cmd = 1;
    total_size += 1 + 4;
  }

  if (has_msgbody_len()) {
    // required fixed32 msgbody_len = 2;
    total_size += 1 + 4;
  }

  if (has_seq()) {
    // required fixed32 seq = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t MsgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgHead)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required fixed32 cmd = 1;
    total_size += 1 + 4;

    // required fixed32 msgbody_len = 2;
    total_size += 1 + 4;

    // required fixed32 seq = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional fixed32 checksum = 4;
  if (has_checksum()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgHead)
    MergeFrom(*source);
  }
}

void MsgHead::MergeFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      cmd_ = from.cmd_;
    }
    if (cached_has_bits & 0x00000002u) {
      msgbody_len_ = from.msgbody_len_;
    }
    if (cached_has_bits & 0x00000004u) {
      seq_ = from.seq_;
    }
    if (cached_has_bits & 0x00000008u) {
      checksum_ = from.checksum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHead::CopyFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHead::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MsgHead::Swap(MsgHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHead::InternalSwap(MsgHead* other) {
  using std::swap;
  swap(cmd_, other->cmd_);
  swap(msgbody_len_, other->msgbody_len_);
  swap(seq_, other->seq_);
  swap(checksum_, other->checksum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgHead::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgBody::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgBody::kBodyFieldNumber;
const int MsgBody::kTargetIdFieldNumber;
const int MsgBody::kSbodyFieldNumber;
const int MsgBody::kAdditionalFieldNumber;
const int MsgBody::kNodeIdentifyFieldNumber;
const int MsgBody::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgBody::MsgBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_2eproto::scc_info_MsgBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgBody)
}
MsgBody::MsgBody(const MsgBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  targetid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_targetid()) {
    targetid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetid_);
  }
  sbody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sbody()) {
    sbody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sbody_);
  }
  additional_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_additional()) {
    additional_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.additional_);
  }
  node_identify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_node_identify()) {
    node_identify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_identify_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:MsgBody)
}

void MsgBody::SharedCtor() {
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sbody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additional_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_identify_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0u;
}

MsgBody::~MsgBody() {
  // @@protoc_insertion_point(destructor:MsgBody)
  SharedDtor();
}

void MsgBody::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sbody_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additional_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  node_identify_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgBody::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgBody& MsgBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_2eproto::scc_info_MsgBody.base);
  return *internal_default_instance();
}


void MsgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      body_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      targetid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sbody_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      additional_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      node_identify_.ClearNonDefaultToEmptyNoArena();
    }
  }
  status_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes body = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes targetId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_targetid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sbody = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sbody()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sbody().data(), static_cast<int>(this->sbody().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MsgBody.sbody");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes additional = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_additional()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string node_identify = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_identify()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->node_identify().data(), static_cast<int>(this->node_identify().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MsgBody.node_identify");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgBody)
  return false;
#undef DO_
}

void MsgBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes body = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->body(), output);
  }

  // optional bytes targetId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->targetid(), output);
  }

  // optional string sbody = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbody().data(), static_cast<int>(this->sbody().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MsgBody.sbody");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sbody(), output);
  }

  // optional bytes additional = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->additional(), output);
  }

  // optional string node_identify = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_identify().data(), static_cast<int>(this->node_identify().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MsgBody.node_identify");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->node_identify(), output);
  }

  // optional uint32 status = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MsgBody)
}

::google::protobuf::uint8* MsgBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes body = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->body(), target);
  }

  // optional bytes targetId = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->targetid(), target);
  }

  // optional string sbody = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sbody().data(), static_cast<int>(this->sbody().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MsgBody.sbody");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sbody(), target);
  }

  // optional bytes additional = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->additional(), target);
  }

  // optional string node_identify = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node_identify().data(), static_cast<int>(this->node_identify().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MsgBody.node_identify");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->node_identify(), target);
  }

  // optional uint32 status = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgBody)
  return target;
}

size_t MsgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgBody)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes body = 1;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

    // optional bytes targetId = 2;
    if (has_targetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->targetid());
    }

    // optional string sbody = 3;
    if (has_sbody()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sbody());
    }

    // optional bytes additional = 5;
    if (has_additional()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->additional());
    }

    // optional string node_identify = 6;
    if (has_node_identify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->node_identify());
    }

    // optional uint32 status = 7;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgBody)
    MergeFrom(*source);
  }
}

void MsgBody::MergeFrom(const MsgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_targetid();
      targetid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sbody();
      sbody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sbody_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_additional();
      additional_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.additional_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_node_identify();
      node_identify_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_identify_);
    }
    if (cached_has_bits & 0x00000020u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBody::CopyFrom(const MsgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBody::IsInitialized() const {
  return true;
}

void MsgBody::Swap(MsgBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgBody::InternalSwap(MsgBody* other) {
  using std::swap;
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  targetid_.Swap(&other->targetid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sbody_.Swap(&other->sbody_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  additional_.Swap(&other->additional_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  node_identify_.Swap(&other->node_identify_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgBody::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrdinaryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrdinaryResponse::kErrNoFieldNumber;
const int OrdinaryResponse::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrdinaryResponse::OrdinaryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_2eproto::scc_info_OrdinaryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrdinaryResponse)
}
OrdinaryResponse::OrdinaryResponse(const OrdinaryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_err_msg()) {
    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
  err_no_ = from.err_no_;
  // @@protoc_insertion_point(copy_constructor:OrdinaryResponse)
}

void OrdinaryResponse::SharedCtor() {
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  err_no_ = 0;
}

OrdinaryResponse::~OrdinaryResponse() {
  // @@protoc_insertion_point(destructor:OrdinaryResponse)
  SharedDtor();
}

void OrdinaryResponse::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrdinaryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrdinaryResponse::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrdinaryResponse& OrdinaryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_2eproto::scc_info_OrdinaryResponse.base);
  return *internal_default_instance();
}


void OrdinaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OrdinaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    err_msg_.ClearNonDefaultToEmptyNoArena();
  }
  err_no_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrdinaryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrdinaryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 err_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_err_no();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes err_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrdinaryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrdinaryResponse)
  return false;
#undef DO_
}

void OrdinaryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrdinaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 err_no = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_no(), output);
  }

  // optional bytes err_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OrdinaryResponse)
}

::google::protobuf::uint8* OrdinaryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrdinaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 err_no = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_no(), target);
  }

  // optional bytes err_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrdinaryResponse)
  return target;
}

size_t OrdinaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrdinaryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes err_msg = 2;
    if (has_err_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->err_msg());
    }

    // optional int32 err_no = 1;
    if (has_err_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->err_no());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrdinaryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrdinaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OrdinaryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrdinaryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrdinaryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrdinaryResponse)
    MergeFrom(*source);
  }
}

void OrdinaryResponse::MergeFrom(const OrdinaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrdinaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_err_msg();
      err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      err_no_ = from.err_no_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OrdinaryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrdinaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrdinaryResponse::CopyFrom(const OrdinaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrdinaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrdinaryResponse::IsInitialized() const {
  return true;
}

void OrdinaryResponse::Swap(OrdinaryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrdinaryResponse::InternalSwap(OrdinaryResponse* other) {
  using std::swap;
  err_msg_.Swap(&other->err_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(err_no_, other->err_no_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrdinaryResponse::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MsgHead* Arena::CreateMaybeMessage< ::MsgHead >(Arena* arena) {
  return Arena::CreateInternal< ::MsgHead >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MsgBody* Arena::CreateMaybeMessage< ::MsgBody >(Arena* arena) {
  return Arena::CreateInternal< ::MsgBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OrdinaryResponse* Arena::CreateMaybeMessage< ::OrdinaryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::OrdinaryResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
